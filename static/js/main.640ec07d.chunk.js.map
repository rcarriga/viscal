{"version":3,"sources":["components/titlebar.tsx","board/calculus/util.ts","board/calculus/reducers/base.ts","board/calculus/reducers/index.ts","board/calculus/reducers/normal.ts","board/calculus/reducers/applicative.ts","board/calculus/parser/index.ts","board/content/graph/index.tsx","board/content/tooltip.tsx","board/content/index.tsx","components/slider.tsx","board/control/animation.tsx","board/control/primitive.tsx","board/control/expression.tsx","board/control/reducer.tsx","board/control/scale.tsx","board/control/index.tsx","board/index.tsx","App.tsx","serviceWorker.ts","index.tsx","board/util.ts","board/state/tree/util.ts","board/state/index.ts","board/state/tree/index.ts","board/state/tree/reducers.ts","board/state/tree/types.ts","board/state/visual/reducers.ts","board/state/visual/types.ts","board/state/visual/index.ts","board/state/selectors/index.ts","board/state/selectors/coords/index.ts","board/state/selectors/styles.ts","board/state/selectors/joins.ts","board/state/selectors/text.ts","board/state/hooks.ts","board/state/selectors/coords/dimensions.ts","board/content/graph/elements/index.tsx","board/content/graph/elements/primitive.tsx","board/content/graph/elements/abstraction.tsx","board/content/graph/elements/application.tsx","board/content/graph/elements/variable.tsx"],"names":["TitleBar","props","className","children","generateID","Number","String","Math","random","slice","Date","now","round","performance","toString","createReduction","parentID","tree","parentNode","nodes","type","abs","left","consumed","right","visibleParent","getVisibleParent","child","visibleChildren","substitutions","createSubstitutions","REDUCTION_STAGES","parentApplication","reducer","isRedex","node","childID","state","searchTree","_node","nodeID","indexOf","root","absID","consumedID","getRemoved","map","index","createNodeSubstitution","primitives","createPrimitiveSubstitution","reduce","prev","cur","_","uniq","reduceTree","prims","sub","oldID","directChildren","subs","binderID","keys","pickBy","binder","reducers","normal","name","description","useReduction","rootID","rightID","applicative","innerReduction","parseExpression","expression","dis","constants","trim","parser","P","optWhitespace","then","skip","varName","regexp","constName","expr","nonApp","atLeast","exprs","alt","lazy","string","abstraction","variable","constant","res","or","seqMap","names","buildAbs","length","reverse","exprStr","num","numText","parsed","parse","status","value","makeFailure","offset","expected","incrementIndex","indices","mapValues","fillState","nextID","abstractions","primID","addVariable","addAbstraction","variableName","leftID","addApplication","leftPrims","forEach","prim","createPrimitive","setOriginalRoot","Graph","useOrderedKeys","onStop","useAnimationControl","useMotionTrackers","start","rest","events","useEvents","orderedKeys","onRest","onStart","useDispatch","useTreeState","reduction","useReducer","nextReduction","mode","useMode","continueControl","nextReductionStage","next","queueReduction","setMode","ActionCreators","undo","useEffect","movingSet","useRef","Set","useState","isMoving","setMoving","current","add","delete","size","coords","useCoords","highlighted","useHighlighted","selected","useSelected","Object","sort","a","b","includes","values","x","w","onClick","setSelected","onMouseOver","setHighlighted","onMouseLeave","VarDescription","AbsDescription","text","ApplDescription","DescriptionRow","undefined","style","display","marginRight","DescriptionTitle","RemovePrimitive","usePrimitives","destructurePrimitive","ChangeRoot","useRoot","setRoot","Tooltip","useTextTree","coord","useCoord","useTree","useSpring","opacity","config","gentle","cursor","deleteStyle","float","width","height","foreignObject","y","border","borderRadius","button","BoardContent","ref","useComponentSize","setX","setY","panning","setPanning","svg","id","pointerEvents","viewBox","onPanStart","onPanEnd","onPan","_e","info","delta","in","stdDeviation","result","in2","operator","Slider","title","onChange","max","min","SliderTitle","SliderPanel","AnimationControl","settings","useAnimationSettings","setAnimationSetting","setting","duration","PrimitiveModal","close","setInput","onClose","input","show","e","currentTarget","marginBottom","placeholder","aria-label","PrimitveControl","selectedList","modal","setModal","justifyContent","Constants","useConstants","active","setActive","table","overflow","maxHeight","arrow","transform","flexGrow","div","fontSize","key","TreeText","hover","setHover","medium","textAlign","Divider","margin","paddingLeft","paddingRight","Input","help","setHelp","helpIcon","position","helpMessage","overflowY","clamp","marginLeft","Help","ExpressionControl","setExpr","toggle","useOriginalRoot","focused","clearTree","clearHistory","marginTop","resetRoot","replace","ReducerControl","reducerID","currentReducer","showDrop","setDrop","IconButton","setReducer","ScaleControl","dimensions","useDimensions","scaleBy","setScale","newVal","updateDimensions","val","ControlPanel","setShow","setDiv","animate","background","transition","stiffness","padding","clientHeight","clear","Board","store","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","isString","str","f","partialMapTree","accum","updated","filter","traverseTree","createVar","createAbs","createAppl","setNextStage","stage","getNode","getPrimitive","actions","configureStore","undoable","treeSlice","includeAction","action","groupBy","currentState","stateHistory","present","visual","visualSlice","_useDispatch","createSlice","initialState","initialTreeState","originalRoot","payload","varNode","absNode","removeReductionPrimitives","addReductionPrimitives","addReplacementNodes","replaceVars","removeReduced","setConstant","addPrimitive","removePrimitive","flatMap","replacedID","newID","oldPrim","primitiveID","primitive","remove","newChild","replaceRoot","replaceFrom","replaceChild","unset","substitution","getNodeSub","getPrimSub","subID","newLeft","newRight","toReplace","oldChild","RECURSE","PLUS","MULT","SUCC","POW","PRED","SUb","TRUE","FALSE","AND","OR","NOT","IFTHENELSE","ISZERO","LEQ","initialVisualState","setDimension","dimension","animation","setAnimationEnabled","enabled","theme","highlightedStroke","selectedStroke","stroke","transparent","unbinded","circleRadius","heightMargin","strokeWidth","widthMargin","coordsSelector","createSelector","joinsSelector","joins","constructDimensions","coordOffsets","calculateCoordOffsets","fillCoords","afterReduction","addOverrides","replacementOverrides","unbindedVar","replacement","yOffset","newChildID","rootOffset","jOffsets","offsets","join","mergeWith","addOffset","redOffsets","xOffset","afterConsumed","reductionOffsets","baseX","baseY","childCoord","overrideUnbinded","override","styles","createStyle","overrideReplacement","newNodeID","overrideReplaced","overrideConsumed","overrideRemoved","absStyle","applStyle","overrides","styleID","copies","createPrimStyle","createVarStyle","createAbsStyle","createApplStyle","color","colors","fill","strokeLinecap","output","stylesSelector","colorsSelector","constructCopyMap","initStyles","isObject","copyReplaced","toCopy","copyParent","createColor","randomcolor","seed","luminosity","abstractionJoins","parentJoin","reductionAbs","reductionChild","newJoins","jointTo","distance","applicationJoins","textTreeSelector","stringifyTree","furthestJoins","furthest","nextNodes","joinNames","end","nextNode","useSelector","_useSelector","useStyles","dimensionOffsets","calculateDimensionOffsets","calculateDimensions","maxDistances","distances","joinOffsets","childDimensions","h","elementHeight","elementWidth","nodeDimensions","sumChildren","sum","ExprElements","primElements","varElements","absElements","applElements","g","initial","ExprElement","console","log","elemProps","static","onAnimationStart","onAnimationComplete","exit","animated","path","rawPrimElements","radius","boxWidth","circleTopPoint","circleBuffer","boxPath","staticProps","handler","stopPropagation","d","textAnchor","dominantBaseline","rawAbsElements","inputX","outPath","inPath","rawApplElements","rawVarElements"],"mappings":"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","file":"static/js/main.640ec07d.chunk.js","sourcesContent":["import React from \"react\"\n\nconst TitleBar = (props: { children?: any }) => {\n  return (\n    <div className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"title is-1 is-family-sans-serif\">𝝺 Viscal</div>\n          <div className=\"subtitle\">A visual language to interpret the Lambda Calculus</div>\n        </div>\n      </div>\n      {props.children}\n    </div>\n  )\n}\n\nexport default TitleBar\n","import { NodeID } from \"board/state\"\n\nexport const generateID = (): NodeID => {\n  return \"_\" + (Number(String(Math.random()).slice(5)) + Date.now() + Math.round(performance.now())).toString(36)\n}\n","import {\n  TreeState,\n  NodeID,\n  Substitutions,\n  Tree,\n  TreeNode,\n  ReductionStage,\n  REDUCTION_STAGES,\n  searchTree,\n  reduceTree,\n  NodeSubstitution,\n  PrimitiveSubstitution,\n  visibleChildren,\n  directChildren\n} from \"board/state\"\nimport _ from \"lodash\"\nimport { generateID } from \"../util\"\nexport interface LambdaReducer {\n  name: string\n  description: string\n  useReduction: (tree: TreeState) => ReductionStage | undefined\n}\n\nexport const createReduction = (parentID: NodeID, tree: TreeState): ReductionStage | undefined => {\n  const parentNode = tree.nodes[parentID]\n  if (!parentNode || parentNode.type !== \"APPLICATION\") return undefined\n  const abs = parentNode.left\n  const consumed = parentNode.right\n  if (!abs || !consumed || !tree.nodes[abs] || !tree.nodes[consumed]) return undefined\n  const visibleParent = getVisibleParent(abs, tree)\n  if (!visibleParent) return undefined\n  const child = visibleChildren(abs, tree.nodes)[0]\n  const substitutions = createSubstitutions(abs, consumed, tree)\n  return {\n    type: REDUCTION_STAGES[0],\n    visibleParent: visibleParent,\n    parentApplication: parentID,\n    abs,\n    child,\n    consumed,\n    substitutions,\n    reducer: tree.reducer || \"\"\n  }\n}\n\nexport const isRedex = (node: TreeNode, tree: Tree): boolean => {\n  return !(\n    node.type !== \"APPLICATION\" ||\n    !node.left ||\n    !node.right ||\n    !tree[node.left] ||\n    !tree[node.right] ||\n    tree[node.left].type !== \"ABSTRACTION\"\n  )\n}\n\nconst getVisibleParent = (childID: NodeID, state: TreeState): NodeID | undefined => {\n  const parentID = searchTree(\n    state.nodes,\n    (_node, nodeID) => visibleChildren(nodeID, state.nodes).indexOf(childID) !== -1,\n    state.root || \"\"\n  )\n  return parentID\n}\n\nconst createSubstitutions = (absID: NodeID, consumedID: NodeID, tree: TreeState): Substitutions => {\n  const removed = getRemoved(absID, tree)\n  return removed\n    .map((nodeID, index) =>\n      index === -1\n        ? {}\n        : {\n            [nodeID]: {\n              nodes: createNodeSubstitution(consumedID, tree.nodes),\n              primitives: createPrimitiveSubstitution(consumedID, tree.nodes)\n            }\n          }\n    )\n    .reduce((prev, cur) => ({ ...prev, ...cur }), {})\n}\n\nconst createPrimitiveSubstitution = (consumedID: NodeID, tree: Tree): PrimitiveSubstitution => {\n  const oldPrims = _.uniq(reduceTree(tree, (prims: string[], node) => [...prims, ...node.primitives], [], consumedID))\n  const sub = oldPrims.reduce((sub, oldID) => ({ ...sub, [oldID]: generateID() }), {})\n  return sub\n}\n\nconst createNodeSubstitution = (nodeID: NodeID, tree: Tree): NodeSubstitution => {\n  const node = tree[nodeID]\n  if (!node) return {}\n  return directChildren(node)\n    .map(nodeID => createNodeSubstitution(nodeID, tree))\n    .reduce((subs, sub) => ({ ...subs, ...sub }), { [nodeID]: generateID() })\n}\n\nconst getRemoved = (binderID: NodeID, tree: TreeState): NodeID[] =>\n  _.keys(\n    _.pickBy(tree.nodes, node => {\n      return node.type === \"VARIABLE\" && node.binder === binderID\n    })\n  )\n","import { LambdaReducerID } from \"board/state\"\nimport Applicative from \"./applicative\"\nimport { LambdaReducer } from \"./base\"\nimport Normal from \"./normal\"\n\nexport * from \"./base\"\n\nconst reducers: { [id in LambdaReducerID]: LambdaReducer } = {\n  normal: Normal,\n  applicative: Applicative\n} as const\n\nexport default reducers\n","import { TreeState, ReductionStage, NodeID } from \"board/state\"\nimport { createReduction, isRedex, LambdaReducer } from \"./base\"\n\nconst reduce = (state: TreeState, rootID?: NodeID): ReductionStage | undefined => {\n  if (rootID) {\n    const root = state.nodes[rootID]\n    if (!root) return undefined\n    if (isRedex(root, state.nodes)) return createReduction(rootID, state)\n    switch (root.type) {\n      case \"ABSTRACTION\":\n        return reduce(state, root.child)\n      case \"APPLICATION\": {\n        const [leftID, rightID] = [root.left, root.right]\n        return reduce(state, leftID) || reduce(state, rightID)\n      }\n      default:\n    }\n  }\n}\n\nexport default {\n  name: \"Normal Order\",\n  description: \"Performs normal order reduction...\",\n  useReduction: state => reduce(state, state.root)\n} as LambdaReducer\n","import { TreeState, ReductionStage, NodeID } from \"board/state\"\nimport { createReduction, isRedex, LambdaReducer } from \"./base\"\n\nconst reduce = (state: TreeState, rootID?: NodeID): ReductionStage | undefined => {\n  if (rootID) {\n    const root = state.nodes[rootID]\n    if (!root) return undefined\n    const innerReduction = (() => {\n      switch (root.type) {\n        case \"ABSTRACTION\":\n          return reduce(state, root.child)\n        case \"APPLICATION\": {\n          const [leftID, rightID] = [root.left, root.right]\n          return reduce(state, leftID) || reduce(state, rightID)\n        }\n        default:\n      }\n    })()\n    if (innerReduction) return innerReduction\n    if (isRedex(root, state.nodes)) return createReduction(rootID, state)\n  }\n}\n\nexport default {\n  name: \"Applicative Order\",\n  description: \"Performs applicative order reduction.\",\n  useReduction: state => reduce(state, state.root)\n} as LambdaReducer\n","import {\n  Dispatcher,\n  addVariable,\n  addAbstraction,\n  addApplication,\n  createPrimitive,\n  NodeID,\n  setOriginalRoot,\n  ExprConstants,\n  Primitives\n} from \"board/state\"\nimport _ from \"lodash\"\nimport P, { Parser } from \"parsimmon\"\nimport { generateID } from \"../util\"\n\ntype Indices = { [name: string]: number }\n\ntype ParsedVar = { type: \"VAR\"; varName: string }\ntype ParsedAbs = { type: \"ABS\"; varName: string; child?: ParsedExpr }\ntype ParsedAppl = { type: \"APPL\"; left: ParsedExpr; right: ParsedExpr }\ntype ParsedConst = { type: \"CONST\"; name: string; expr: ParsedExpr }\ntype ParsedExpr = ParsedVar | ParsedAbs | ParsedAppl | ParsedConst\n\nexport const parseExpression = (\n  expression: string,\n  dis: Dispatcher,\n  constants: ExprConstants\n): P.Failure | undefined => {\n  const parens = <T>(parser: Parser<T>): Parser<T> =>\n    P.string(\"(\")\n      .then(trim(parser))\n      .skip(P.string(\")\"))\n\n  const trim = <T>(parser: Parser<T>): Parser<T> => P.optWhitespace.then(parser).skip(P.optWhitespace)\n\n  const varName: Parser<string> = trim(P.regexp(/[a-z]+/))\n\n  const constName: Parser<string> = trim(P.regexp(/[A-Z]+/))\n\n  const expr = (): Parser<ParsedExpr> =>\n    nonApp()\n      .atLeast(1)\n      .map(exprs => {\n        return exprs.slice(1).reduce((left, right) => ({ type: \"APPL\", left, right }), exprs[0])\n      })\n\n  const nonApp = (): Parser<ParsedExpr> =>\n    trim(P.alt(parens(P.lazy(expr)), P.lazy(abstraction), P.lazy(variable), P.lazy(constant)))\n\n  const variable = (): Parser<ParsedVar> => varName.map(res => ({ type: \"VAR\", varName: res }))\n\n  const abstraction = (): Parser<ParsedAbs> =>\n    P.string(\"\\\\\")\n      .or(P.string(\"λ\"))\n      .then(\n        P.seqMap(varName.atLeast(1), P.string(\".\"), P.lazy(expr), (names: string[], _: string, child: ParsedExpr) => {\n          const buildAbs = (expr: ParsedExpr | undefined, varName: string): ParsedAbs => ({\n            type: \"ABS\",\n            varName,\n            child: expr\n          })\n          return names\n            .slice(0, names.length - 1)\n            .reverse()\n            .reduce(buildAbs, buildAbs(child, names[names.length - 1]))\n        })\n      )\n\n  const constant = (): Parser<ParsedConst> =>\n    trim(\n      constName\n        .map(name => ({ name, exprStr: constants[name] }))\n        .or(\n          P.regexp(/[0-9]+/).map(res => {\n            const num = Number(res)\n            let numText = \"x\"\n            for (let index = 0; index < num; index++) {\n              numText = `f (${numText})`\n            }\n            return { name: res, exprStr: `λ f x. ${numText}` }\n          })\n        )\n    ).map(res => {\n      const parsed = expr().parse(res.exprStr)\n      return parsed.status\n        ? { type: \"CONST\", name: res.name, expr: parsed.value }\n        : ((P.makeFailure(parsed.index.offset, parsed.expected) as unknown) as ParsedConst)\n    })\n\n  const res = expr().parse(expression)\n  if (res.status) {\n    const parsed = res.value\n    if (!parsed) return\n    const incrementIndex = (indices: Indices) => _.mapValues(indices, index => index + 1)\n    const fillState = (\n      expr: ParsedExpr | undefined,\n      indices: { [name: string]: number },\n      nextID: NodeID,\n      abstractions: NodeID[] = [],\n      primitives: Primitives = {}\n    ): Primitives => {\n      if (!expr) return primitives\n      switch (expr.type) {\n        case \"CONST\": {\n          const primID = generateID()\n          return fillState(expr.expr, indices, nextID, abstractions, {\n            ...primitives,\n            [primID]: { rootID: nextID, name: expr.name }\n          })\n        }\n        case \"VAR\":\n          dis(addVariable({ nodeID: nextID, binder: abstractions[indices[expr.varName]], name: expr.varName }))\n          return primitives\n        case \"ABS\": {\n          const childID = generateID()\n          dis(addAbstraction({ nodeID: nextID, variableName: expr.varName, child: childID }))\n          return fillState(\n            expr.child,\n            { ...incrementIndex(indices), [expr.varName]: 0 },\n            childID,\n            [nextID, ...abstractions],\n            primitives\n          )\n        }\n        case \"APPL\": {\n          const leftID = generateID()\n          const rightID = generateID()\n          dis(addApplication({ nodeID: nextID, left: leftID, right: rightID }))\n          const leftPrims = fillState(expr.left, indices, leftID, abstractions, primitives)\n          return fillState(expr.right, indices, rightID, abstractions, leftPrims)\n        }\n        default:\n          return primitives\n      }\n    }\n    const rootID = generateID()\n    const prims = fillState(parsed, {}, rootID)\n    _.forEach(prims, (prim, primID) => dis(createPrimitive({ name: prim.name, primID, rootID: prim.rootID })))\n    dis(setOriginalRoot(rootID))\n  } else {\n    return res\n  }\n}\n","import { reducers } from \"board/calculus\"\nimport {\n  useMode,\n  useCoords,\n  useHighlighted,\n  useSelected,\n  useReduction,\n  useDispatch,\n  nextReductionStage,\n  queueReduction,\n  useTreeState,\n  setMode,\n  useReducer,\n  REDUCTION_STAGES,\n  setSelected,\n  setHighlighted\n} from \"board/state\"\nimport React, { useRef, useState, useEffect } from \"react\"\nimport { ActionCreators } from \"redux-undo\"\nimport ExprElements, { NodeEvents } from \"./elements\"\n\nconst Graph = () => {\n  const keys = useOrderedKeys()\n  const onStop = useAnimationControl()\n  const { start, rest } = useMotionTrackers(onStop)\n  const events = useEvents()\n  return <ExprElements events={events} orderedKeys={keys} onRest={rest} onStart={start} />\n}\n\nexport default Graph\n\nconst useAnimationControl = () => {\n  const dis = useDispatch()\n  const tree = useTreeState()\n  const reduction = useReduction()\n  const reducer = reducers[useReducer() || \"\"] || { useReduction: () => undefined }\n  const nextReduction = () => reducer.useReduction(tree)\n  const mode = useMode()\n  const continueControl = () => {\n    switch (mode) {\n      case \"PLAY\":\n        if (reduction) dis(nextReductionStage())\n        else {\n          const next = nextReduction()\n          if (next) dis(queueReduction(next))\n          else dis(setMode(\"STOP\"))\n        }\n        break\n      case \"FORWARD\":\n        if (!reduction) dis(queueReduction(nextReduction()))\n        else {\n          dis(nextReductionStage())\n          if (reduction.type === REDUCTION_STAGES[REDUCTION_STAGES.length - 1]) dis(setMode(\"STOP\"))\n        }\n\n        break\n      case \"REVERSE\":\n        dis(ActionCreators.undo())\n        if (reduction && reduction.type === REDUCTION_STAGES[0]) dis(setMode(\"STOP\"))\n        break\n      case \"STOP\":\n      default:\n    }\n  }\n  useEffect(continueControl, [mode])\n  return continueControl\n}\n\nconst useMotionTrackers = (onStop: () => void) => {\n  const movingSet = useRef(new Set([] as string[]))\n  const [isMoving, setMoving] = useState(false)\n  const start = (name: string) => {\n    movingSet.current.add(name)\n    if (!isMoving) {\n      setMoving(true)\n    }\n  }\n  const rest = (name: string) => {\n    movingSet.current.delete(name)\n    if (movingSet.current.size === 0) {\n      onStop()\n      setMoving(false)\n    }\n  }\n  return { start, rest }\n}\nconst useOrderedKeys = () => {\n  const coords = useCoords()\n  const highlighted = useHighlighted()\n  const selected = useSelected()\n  const reduction = useReduction()\n  return Object.keys(coords).sort((a, b) => {\n    const nodeID = coords[a].nodeID\n    if (highlighted.includes(nodeID) || selected.includes(nodeID)) return 1\n    if (reduction) {\n      if (\n        nodeID === reduction.consumed ||\n        Object.values(reduction.substitutions)\n          .map(sub => sub.nodes[reduction.consumed])\n          .indexOf(nodeID) !== -1\n      )\n        return 1\n    }\n    return coords[a].x - coords[b].x || coords[b].w - coords[a].w\n  })\n}\n\nconst useEvents = (): NodeEvents => {\n  const dis = useDispatch()\n  const [events] = useState({\n    onClick: nodeID => {\n      dis(setSelected([nodeID]))\n    },\n    onMouseOver: nodeID => {\n      dis(setHighlighted([nodeID]))\n    },\n    onMouseLeave: () => {\n      dis(setHighlighted([]))\n    }\n  } as NodeEvents)\n  return events\n}\n","import {\n  useSelected,\n  useHighlighted,\n  useCoord,\n  Variable,\n  setSelected,\n  Abstraction,\n  useTree,\n  useTextTree,\n  NodeID,\n  useDispatch,\n  destructurePrimitive,\n  usePrimitives,\n  TreeNode,\n  setRoot,\n  useRoot\n} from \"board/state\"\nimport React from \"react\"\nimport { useSpring, animated, config } from \"react-spring\"\n\nconst Tooltip = () => {\n  const dis = useDispatch()\n  const selected = useSelected()\n  const highlighted = useHighlighted()\n  const nodeID = selected.length === 1 ? selected[0] : highlighted[0] || \"\"\n  const text = useTextTree(nodeID)\n  const coord = useCoord(nodeID)\n  const node = useTree()[nodeID]\n  const style = useSpring({\n    opacity: nodeID && coord ? 1 : 0,\n    config: config.gentle,\n    cursor: \"default\"\n  })\n  const deleteStyle = useSpring({\n    float: \"right\",\n    opacity: selected.length ? 1 : 0\n  })\n  const description = () => {\n    if (nodeID && node) {\n      return (\n        <div>\n          {(() => {\n            switch (node.type) {\n              case \"VARIABLE\":\n                return <VarDescription nodeID={nodeID} node={node} />\n              case \"ABSTRACTION\":\n                return <AbsDescription nodeID={nodeID} node={node} text={text} />\n              case \"APPLICATION\":\n                return <ApplDescription nodeID={nodeID} text={text} />\n              default:\n            }\n          })()}\n          <div className=\"dropdown-divider\" />\n          <div className=\"columns\">\n            <RemovePrimitive node={node} />\n            <ChangeRoot nodeID={nodeID} />\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n  const width = coord ? 400 : 0\n  const height = coord ? 300 : 0\n  return (\n    <animated.foreignObject\n      style={style}\n      x={coord ? coord.x + coord.w / 2 - width / 2 : 0}\n      y={coord ? coord.y + 100 : 0}\n      height={height}\n      width={width}\n    >\n      <div className=\"card\" style={{ border: \"3px solid grey\", borderRadius: 3 }}>\n        <div className=\"card-content\">\n          <animated.button className=\"delete\" onClick={() => dis(setSelected([]))} style={deleteStyle as any} />\n          {description()}\n        </div>\n      </div>\n    </animated.foreignObject>\n  )\n}\n\nconst VarDescription = ({ node, nodeID }: { node: Variable; nodeID: NodeID }) => {\n  return (\n    <div className=\"\">\n      <DescriptionTitle name=\"Variable\" />\n      <DescriptionRow name={\"Name\"} value={node.name} />\n    </div>\n  )\n}\n\nconst AbsDescription = ({ node, text, nodeID }: { node: Abstraction; nodeID: NodeID; text: string }) => {\n  return (\n    <div className=\"\">\n      <DescriptionTitle name=\"Abstraction\" />\n      <DescriptionRow name={\"Scoped Variable\"} value={node.variableName} />\n      <DescriptionRow name={\"Text\"} value={text} />\n    </div>\n  )\n}\n\nconst ApplDescription = ({ text, nodeID }: { text: string; nodeID: NodeID }) => {\n  return (\n    <div className=\"\">\n      <DescriptionTitle name=\"Application\" />\n      <DescriptionRow name={\"Text\"} value={text} />\n    </div>\n  )\n}\n\nconst DescriptionRow = ({ name, value }: { name: string; value: any }) =>\n  value !== undefined ? (\n    <div className=\"\">\n      <div style={{ display: \"flex\" }}>\n        <strong style={{ marginRight: 10 }}>{name}:</strong>\n        <div className=\"\">{value}</div>\n      </div>\n    </div>\n  ) : null\n\nconst DescriptionTitle = ({ name }: { name: string }) => (\n  <div className=\"subtitle\">\n    {name}\n    <div className=\"dropdown-divider\" />\n  </div>\n)\n\nconst RemovePrimitive = ({ node }: { node: TreeNode }) => {\n  const dis = useDispatch()\n  const primID = node.primitives[node.primitives.length - 1]\n  const primitive = usePrimitives()[primID]\n\n  return primitive ? (\n    <div className=\"column\">\n      <div className=\"button\" onClick={() => dis(destructurePrimitive(primID))}>\n        Destructure Primitive\n      </div>\n    </div>\n  ) : null\n}\n\nconst ChangeRoot = ({ nodeID }: { nodeID: NodeID }) => {\n  const dis = useDispatch()\n  const root = useRoot()\n  return root !== nodeID ? (\n    <div className=\"column\">\n      <div\n        className=\"button\"\n        onClick={() => {\n          dis(setSelected([]))\n          dis(setRoot(nodeID))\n        }}\n      >\n        Focus\n      </div>\n    </div>\n  ) : null\n}\n\nexport default Tooltip\n","import useComponentSize from \"@rehooks/component-size\"\nimport { motion } from \"framer-motion\"\nimport React, { useState, useRef } from \"react\"\nimport Graph from \"./graph\"\nimport Tooltip from \"./tooltip\"\n\nconst BoardContent = () => {\n  const ref = useRef(null)\n  const { width, height } = useComponentSize(ref)\n  const [x, setX] = useState(0)\n  const [y, setY] = useState(0)\n  const [panning, setPanning] = useState(false)\n  return (\n    <div ref={ref} className=\"has-background-light\" style={{ width: \"100%\", height: \"100%\" }}>\n      <motion.svg\n        id=\"board-content\"\n        pointerEvents=\"all\"\n        className=\"\"\n        viewBox={`${x - width / 10} ${y - height / 2} ${width} ${height}`}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          cursor: panning ? \"move\" : \"pointer\"\n        }}\n        onPanStart={() => setPanning(true)}\n        onPanEnd={() => setPanning(false)}\n        onPan={(_e, info) => {\n          setX(x - info.delta.x)\n          setY(y - info.delta.y)\n        }}\n      >\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n          <feColorMatrix in=\"blur\" type=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\" result=\"goo\" />\n          <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\" />\n        </filter>\n        <Graph />\n        <Tooltip />\n      </motion.svg>\n    </div>\n  )\n}\n\nexport default BoardContent\n","import { Slider as MaterialSlider } from \"@material-ui/core\"\n\nimport React from \"react\"\n\ninterface SliderControlProps {\n  title?: string\n  max: number\n  min: number\n  onChange: (newValue: number) => void\n  value: number\n}\n\nconst Slider = (props: SliderControlProps) => {\n  return (\n    <SliderPanel>\n      {props.title ? <SliderTitle>{props.title}</SliderTitle> : null}\n      <MaterialSlider\n        onChange={(_: any, value) => props.onChange(typeof value === \"number\" ? value : value[0])}\n        value={props.value}\n        max={props.max}\n        min={props.min}\n      ></MaterialSlider>\n    </SliderPanel>\n  )\n}\n\nexport default Slider\n\ninterface SliderTitleProps {\n  children: React.ReactNode[] | React.ReactNode\n}\n\nconst SliderTitle = (props: SliderTitleProps) => <div className=\"has-text-dark\">{props.children}</div>\n\nconst SliderPanel = (props: any) => <div className=\"container\">{props.children}</div>\n","import { useAnimationSettings, useDispatch, setAnimationSetting } from \"board/state\"\nimport { Slider } from \"components\"\nimport React from \"react\"\n\nconst AnimationControl = () => {\n  const settings = useAnimationSettings()\n  const dis = useDispatch()\n  return (\n    <div>\n      <div className=\"menu-label\">Speed</div>\n      <Slider\n        onChange={(value: number) => dis(setAnimationSetting({ setting: \"duration\", value: (100 - value) / 100 }))}\n        min={1}\n        max={100}\n        value={100 - (settings.duration || 0.5) * 100}\n      />\n    </div>\n  )\n}\n\nexport default AnimationControl\n","import { generateID } from \"board/calculus/util\"\nimport { useSelected, useDispatch, NodeID, createPrimitive, setSelected } from \"board/state\"\nimport React, { useState } from \"react\"\n\nconst PrimitveControl = () => {\n  const selectedList = useSelected()\n  const selected = selectedList.length === 1 ? selectedList[0] : \"\"\n  const [modal, setModal] = useState(false)\n  return (\n    <div>\n      <PrimitiveModal show={modal} nodeID={selected} onClose={() => setModal(false)} />\n      <div className=\"menu-label\">Primitives</div>\n      <div className=\"\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <button\n          onClick={() => selected && setModal(true)}\n          className={`button ${selected ? \"has-text-info\" : \"has-text-grey\"} `}\n          style={{ width: \"100%\" }}\n        >\n          {selected ? \"Create\" : \"Select a Node\"}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst PrimitiveModal = (props: { nodeID: NodeID; show: boolean; onClose: () => void }) => {\n  const close = () => {\n    setInput(\"\")\n    props.onClose()\n  }\n  const dis = useDispatch()\n  const [input, setInput] = useState(\"\")\n  return (\n    <div className={`modal ${props.show && \"is-active\"}`}>\n      <div className=\"modal-background\" onClick={close}></div>\n      <div className=\"modal-content\">\n        <div className=\"box\">\n          <div className=\"card-content\">\n            <input\n              onChange={e => setInput(e.currentTarget.value)}\n              value={input}\n              className=\"input is-medium\"\n              style={{ marginBottom: 10 }}\n              type=\"text\"\n              placeholder=\"Enter a name for the primitive\"\n            />\n            <button\n              className=\"button is-capitalized\"\n              onClick={() => {\n                if (props.nodeID && input) {\n                  dis(createPrimitive({ name: input, primID: generateID(), rootID: props.nodeID }))\n                  dis(setSelected([]))\n                }\n                close()\n              }}\n            >\n              OK\n            </button>\n          </div>\n        </div>\n      </div>\n      <button onClick={close} className=\"modal-close is-large\" aria-label=\"close\"></button>\n    </div>\n  )\n}\n\nexport default PrimitveControl\n","import ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport HelpIcon from \"@material-ui/icons/Help\"\nimport { parseExpression } from \"board/calculus\"\nimport { useDispatch, clearTree, useTextTree, useConstants, useOriginalRoot, useRoot, resetRoot } from \"board/state\"\nimport _ from \"lodash\"\nimport React, { useState, useEffect } from \"react\"\nimport { useSpring, animated } from \"react-spring\"\nimport { ActionCreators } from \"redux-undo\"\n\nconst ExpressionControl = () => {\n  const dis = useDispatch()\n  const [active, setActive] = useState(false)\n  const [expr, setExpr] = useState(\"PLUS 1 2\")\n  const [input, setInput] = useState(expr)\n  const toggle = () => setActive(!active)\n  const constants = useConstants()\n  const root = useOriginalRoot()\n  const focused = useRoot()\n  useEffect(() => {\n    dis(clearTree())\n    parseExpression(expr, dis, constants)\n    dis(ActionCreators.clearHistory())\n  }, [constants, dis, expr])\n  return (\n    <div>\n      <div className=\"menu-label\">Expression</div>\n      <div style={{ marginBottom: 20 }}>\n        <TreeText medium={\"true\"} onClick={() => setActive(!active)} style={{ cursor: \"pointer\" }} />\n        <div\n          className={`button has-text-${root !== focused ? \"link\" : \"grey\"}`}\n          title={root !== focused ? \"Reset focus\" : \"Can't reset focus\"}\n          style={{ width: \"100%\", marginTop: 10 }}\n          onClick={() => dis(resetRoot())}\n        >\n          {root !== focused ? \"Focused\" : \"Full View\"}\n        </div>\n      </div>\n      <div>\n        <div className={`modal ${active ? \"is-active\" : \"\"}`}>\n          <div className=\"modal-background\" onClick={toggle} />\n          <div className=\"modal-content\">\n            <div className=\"box is-background-light\">\n              <div className=\"card-content\">\n                <div className=\"container\" style={{ margin: 20 }}>\n                  <Constants />\n                  <Divider />\n                  <div className=\"subtitle is-5\">Current Form</div>\n                  <TreeText />\n                  <Divider />\n                  <Input value={input} onChange={e => setInput(e.currentTarget.value.replace(\"\\\\\", \"λ\"))} />\n                </div>\n                <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\n                  <button\n                    className=\"button has-text-light has-background-info\"\n                    style={{ marginRight: 20 }}\n                    onClick={() => {\n                      toggle()\n                      setExpr(input)\n                    }}\n                  >\n                    CHANGE\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <button className=\"modal-close is-large\" onClick={toggle} aria-label=\"close\"></button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Constants = () => {\n  const constants = useConstants()\n  const [active, setActive] = useState(false)\n  const table = useSpring({ overflow: \"auto\", maxHeight: active ? 300 : 0 })\n  const arrow = useSpring({\n    display: \"inline-block\",\n    transform: active ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  })\n  return (\n    <div>\n      <div style={{ display: \"flex\", cursor: \"pointer\" }} onClick={() => setActive(!active)}>\n        <div style={{ flexGrow: 7 }} className=\"subtitle is-5\">\n          Built-in Functions\n        </div>\n        <div style={{ flexGrow: 1 }}>\n          <animated.div style={arrow}>\n            <ArrowDropDownIcon fontSize=\"large\" />\n          </animated.div>\n        </div>\n      </div>\n      <animated.div className=\"table-container\" style={table}>\n        <table className=\"table is-fullwidth is-striped is-hoverable\">\n          <thead className=\"thead\">\n            <tr className=\"tr\">\n              <th className=\"th\">Name</th>\n              <th className=\"th\">Text</th>\n            </tr>\n          </thead>\n          <tbody className=\"tbody\">\n            {_.map(constants, (text, name) => (\n              <tr key={name} className=\"tr\">\n                <td className=\"td\">{name}</td>\n                <td className=\"td\">{text}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </animated.div>\n    </div>\n  )\n}\n\nconst TreeText = (props: any) => {\n  const text = useTextTree()\n  const [hover, setHover] = useState(false)\n  return (\n    <div\n      {...props}\n      className={`tag is-light is-info is-${props.medium ? \"medium\" : \"large\"} is-paddingless ${props.className}`}\n      style={{ width: \"100%\", overflow: hover ? \"auto\" : \"hidden\", ...(props.style || {}) }}\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div style={{ textAlign: \"center\", width: \"100%\" }}>{text}</div>\n    </div>\n  )\n}\n\nconst Divider = () => (\n  <div style={{ width: \"100%\", margin: 10, paddingLeft: \"20%\", paddingRight: \"20%\" }}>\n    <div className=\"dropdown-divider\"></div>\n  </div>\n)\n\nconst Input = (props: { value: string; onChange: (e: React.ChangeEvent<HTMLInputElement>) => void }) => {\n  const [help, setHelp] = useState(false)\n  const helpIcon = { cursor: \"pointer\", position: \"absolute\" } as const\n  const helpMessage = useSpring({ overflowY: \"auto\", maxHeight: help ? 300 : 0, config: { clamp: true } })\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <div className=\"subtitle is-5\">Input</div>\n        <div style={{ marginLeft: 10 }}>\n          {!help ? (\n            <animated.div onClick={() => setHelp(!help)} style={helpIcon}>\n              <HelpIcon />\n            </animated.div>\n          ) : (\n            <animated.div onClick={() => setHelp(!help)} style={helpIcon}>\n              <CancelIcon />\n            </animated.div>\n          )}\n        </div>\n      </div>\n      <Help style={helpMessage} />\n      <input className=\"input is-medium\" {...props} type=\"text\" placeholder=\"Enter a lambda expression\" />\n    </div>\n  )\n}\n\nconst Help = (props: { style: React.CSSProperties }) => {\n  return (\n    <animated.div className=\"message is-info\" style={props.style}>\n      <div className=\"message-header\">\n        <p>Writing Expressions</p>\n      </div>\n      <div className=\"message-body\">\n        {\n          'Expressions can be input as text. Examples of these can be seen in the built-in functions. Abstractions are \\\n        written with \"λ\" which can be inputted as a backslash \"\\\\\", followed by a list of lower-case variable names separated by spaces and finally \\\n        terminated by \".\". Numbers can be entered as digits. Built-ins are used by using the upper-case name.'\n        }\n      </div>\n    </animated.div>\n  )\n}\n\nexport default ExpressionControl\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport IconButton from \"@material-ui/core/IconButton\"\nimport FastForwardIcon from \"@material-ui/icons/FastForward\"\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\"\nimport PauseIcon from \"@material-ui/icons/PauseSharp\"\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\"\n\nimport { reducers } from \"board/calculus\"\nimport { setReducer, useReducer, useDispatch, useMode, setMode } from \"board/state\"\nimport _ from \"lodash\"\nimport React, { useState } from \"react\"\n\nconst ReducerControl = () => {\n  const reducerID = useReducer()\n  const currentReducer = reducerID ? reducers[reducerID] : undefined\n  const dis = useDispatch()\n  const mode = useMode()\n  const [showDrop, setDrop] = useState(false)\n  return (\n    <div>\n      <div className=\"menu-label\">Reduction</div>\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"10px\"\n        }}\n      >\n        <IconButton onClick={() => dis(setMode(\"REVERSE\"))}>\n          <FastRewindIcon />\n        </IconButton>\n        {mode !== \"STOP\" ? (\n          <IconButton onClick={() => dis(setMode(\"STOP\"))}>\n            <PauseIcon />\n          </IconButton>\n        ) : (\n          <IconButton onClick={() => dis(setMode(\"PLAY\"))}>\n            <PlayArrowIcon />\n          </IconButton>\n        )}\n        <IconButton onClick={() => dis(setMode(\"FORWARD\"))}>\n          <FastForwardIcon />\n        </IconButton>\n      </div>\n      <div>\n        <div className={`dropdown ${showDrop && \"is-active\"}`} style={{ width: \"100%\" }}>\n          <div className=\"dropdown-trigger\" style={{ width: \"100%\" }}>\n            <button\n              onMouseOver={() => setDrop(true)}\n              onMouseLeave={() => setDrop(false)}\n              style={{ width: \"100%\" }}\n              className={`button ${currentReducer ? \"has-text-info\" : \"has-text-grey\"}`}\n            >\n              {currentReducer ? currentReducer.name : \"No Method\"}\n            </button>\n          </div>\n          <div onMouseOver={() => setDrop(true)} onMouseLeave={() => setDrop(false)} className=\"dropdown-menu\">\n            <div className=\"dropdown-content\">\n              {_.map(reducers, (reducer, reducerID) => (\n                <a\n                  key={reducer.name}\n                  style={{ height: \"100%\", width: \"100%\" }}\n                  className=\"dropdown-item has-text-grey\"\n                  onClick={() => {\n                    setDrop(false)\n                    dis(setReducer(reducerID))\n                  }}\n                >\n                  {reducer.name}\n                </a>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ReducerControl\n","import { useDimensions, useDispatch, updateDimensions } from \"board/state\"\nimport { Slider } from \"components\"\nimport _ from \"lodash\"\nimport React, { useState } from \"react\"\n\nconst ScaleControl = () => {\n  const dimensions = useDimensions()\n  const dis = useDispatch()\n  const [scaleBy, setScale] = useState(10)\n  return (\n    <div>\n      <div className=\"menu-label\">Scale</div>\n      <Slider\n        onChange={newVal => {\n          dis(\n            updateDimensions(\n              _.mapValues(dimensions, (val, key) =>\n                key !== \"strokeWidth\" ? Math.round((val * newVal) / scaleBy) : val\n              )\n            )\n          )\n          setScale(newVal)\n        }}\n        min={1}\n        max={20}\n        value={scaleBy}\n      ></Slider>\n    </div>\n  )\n}\n\nexport default ScaleControl\n","import ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\"\nimport AnimationControl from \"board/control/animation\"\nimport PrimitveControl from \"board/control/primitive\"\nimport { motion } from \"framer-motion\"\nimport React, { useState } from \"react\"\n\nimport ExpressionControl from \"./expression\"\nimport ReducerControl from \"./reducer\"\nimport ScaleControl from \"./scale\"\n\nconst ControlPanel = () => {\n  const [show, setShow] = useState(true)\n  const [div, setDiv] = useState(null as HTMLDivElement | null)\n  return (\n    <div className=\"box\" style={{ width: 250 }}>\n      <div\n        style={{\n          cursor: \"pointer\"\n        }}\n        onClick={() => setShow(!show)}\n      >\n        <div className=\"subtitle\" style={{ float: \"left\", margin: 0 }}>\n          Controls\n        </div>\n        <div style={{ float: \"right\" }}>\n          <motion.div\n            animate={{\n              display: \"inline-block\",\n              transform: show ? \"rotate(180deg)\" : \"rotate(0deg)\"\n            }}\n          >\n            <ArrowDropDownIcon />\n          </motion.div>\n        </div>\n        <div style={{ background: \"black\", width: \"100%\", opacity: 0 }}>_</div>\n      </div>\n      <motion.div\n        className=\"menu\"\n        transition={{ type: \"spring\", stiffness: 50 }}\n        animate={{\n          display: \"block\",\n          padding: 5,\n          maxHeight: show && div ? div.clientHeight + 10 : 0,\n          overflow: \"hidden\",\n          clear: \"both\",\n          marginBottom: show ? 20 : 0\n        }}\n      >\n        <motion.div ref={setDiv}>\n          <ExpressionControl />\n          <ScaleControl />\n          <AnimationControl />\n          <PrimitveControl />\n        </motion.div>\n      </motion.div>\n      <ReducerControl />\n    </div>\n  )\n}\n\nexport default ControlPanel\n","import React from \"react\"\nimport { Provider } from \"react-redux\"\nimport BoardContent from \"./content\"\nimport BoardControl from \"./control\"\nimport store from \"./state\"\n\nexport const Board = () => (\n  <Provider store={store}>\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      }}\n    >\n      <div style={{ position: \"absolute\", margin: \"20px\" }}>\n        <BoardControl />\n      </div>\n      <BoardContent />\n    </div>\n  </Provider>\n)\n\nexport { BoardContent }\n","import TitleBar from \"components/titlebar\"\nimport React from \"react\"\nimport \"./App.css\"\nimport { Board } from \"./board\"\n\nconst App: React.FC = () => {\n  return (\n    <div style={{ overflow: \"hidden\", width: \"100vw\", height: \"100vh\" }}>\n      <TitleBar />\n      <Board />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"font-awesome/css/font-awesome.min.css\"\nimport \"bulma\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const isString = (str: string | undefined): str is string => !!str // Allows typechecking\n\n// const switchCase = <T, O extends { type: T }, R extends O<T>>(obj: O, funcs: { [type in T]: (arg: O) => R }): R => {\n//   const type = obj.type\n//   if (funcs[type]) return funcs[type](obj)\n// }\n//\n","import { isString } from \"../../util\"\nimport { Tree, TreeNode, NodeID, VarIndex, VarName, PrimitiveID, TreeState, REDUCTION_STAGES, Primitive } from \".\"\n/**\n * Depth first search through the tree for first node to pass a predicate.\n *\n * @function searchTree\n * @param tree - Tree to search for in node.\n * @param f - Predicate function to receive a node and ID to return a boolean\n * @return First node to match predicate\n */\nexport const searchTree = (\n  tree: Tree,\n  f: (node: TreeNode, nodeID: NodeID) => boolean,\n  rootID: NodeID\n): NodeID | undefined => {\n  const root = tree[rootID]\n  if (f(root, rootID)) return rootID\n  switch (root.type) {\n    case \"ABSTRACTION\":\n      return root.child ? searchTree(tree, f, root.child) : undefined\n    case \"APPLICATION\":\n      return (\n        (root.left ? searchTree(tree, f, root.left) : undefined) ||\n        (root.right ? searchTree(tree, f, root.right) : undefined)\n      )\n    default:\n      return undefined\n  }\n}\n\n/**\n * Apply a function to nodes in a tree.\n * Function is applied in depth first order.\n * Any nodes not mapped over are returned as is.\n *\n * @function mapTree\n * @param tree - Tree to map over\n * @param f - Function to apply to each node\n * @return Tree with mapped nodes\n */\nexport const partialMapTree = (tree: Tree, f: (node: TreeNode, nodeID: NodeID) => TreeNode, rootID: NodeID): Tree => {\n  return reduceTree(tree, (tree, node, nodeID) => ({ ...tree, [nodeID]: f(node, nodeID) }), tree, rootID)\n}\n\n/**\n * Reduce across a tree in depth first order\n *\n * @function reduceTree\n * @param tree - Tree to reduce\n * @param f - Function to receive each node along with the accumulator\n * @param accum - Initial accumulator value\n * @param rootID - Node to begin from\n * @return Final accumulator\n */\nexport const reduceTree = <A>(\n  tree: Tree,\n  f: (accum: A, node: TreeNode, nodeID: NodeID) => A,\n  accum: A,\n  rootID: NodeID\n): A => {\n  const root = tree[rootID]\n  if (!root) return accum\n  const updated = f(accum, root, rootID)\n  switch (root.type) {\n    case \"VARIABLE\":\n      return updated\n    case \"ABSTRACTION\":\n      return root.child ? reduceTree(tree, f, updated, root.child) : updated\n    case \"APPLICATION\":\n      return [root.left, root.right]\n        .filter(isString)\n        .reduce((updated, childID) => reduceTree(tree, f, updated, childID), updated)\n    default:\n      return accum\n  }\n}\n\nexport const traverseTree = (tree: Tree, f: (node: TreeNode, nodeID: NodeID) => void, rootID: NodeID) => {\n  return reduceTree(\n    tree,\n    (_, node, nodeID) => {\n      f(node, nodeID)\n      return undefined\n    },\n    undefined,\n    rootID\n  )\n}\n\nexport const createVar = (name: VarName, binder?: NodeID, primitives: PrimitiveID[] = []): TreeNode => ({\n  type: \"VARIABLE\",\n  binder,\n  name: name,\n  primitives\n})\n\nexport const createAbs = (variableName: VarName, child?: NodeID, primitives: PrimitiveID[] = []): TreeNode => ({\n  type: \"ABSTRACTION\",\n  variableName: variableName,\n  child: child,\n  primitives\n})\n\nexport const createAppl = (left?: NodeID, right?: NodeID, primitives: PrimitiveID[] = []): TreeNode => ({\n  type: \"APPLICATION\",\n  left: left,\n  right: right,\n  primitives\n})\n\nexport const setNextStage = (state: TreeState) => {\n  const prev = state.reduction\n  if (prev) {\n    if (prev.type === \"CONSUME\" && Object.keys(prev.substitutions || {}).length === 0) prev.type = \"FADE\"\n    else {\n      const stage = REDUCTION_STAGES[REDUCTION_STAGES.indexOf(prev.type) + 1]\n      state.reduction = stage ? { ...prev, type: stage } : undefined\n    }\n  }\n}\n\nexport const getNode = (nodeID: NodeID, tree: Tree): TreeNode => {\n  return tree[nodeID] || { type: \"NULL\", children: [] }\n}\n\nexport const directChildren = (node: TreeNode): NodeID[] => {\n  switch (node.type) {\n    case \"ABSTRACTION\":\n      return node.child ? [node.child] : []\n    case \"APPLICATION\":\n      return [node.left, node.right].filter(isString)\n    default:\n      return []\n  }\n}\nexport const visibleChildren = (nodeID: NodeID | TreeNode, tree: Tree): NodeID[] => {\n  const node = typeof nodeID === \"object\" ? nodeID : getNode(nodeID, tree)\n  const left = directChildren(node)[0] ? getNode(directChildren(node)[0], tree) : undefined\n  if (left && left.type === \"APPLICATION\") {\n    return [...visibleChildren(directChildren(node)[0], tree), ...directChildren(node).slice(1)]\n  }\n  return directChildren(node)\n}\n\nexport const indexFrom = (tree: Tree, goalID: NodeID, rootID: NodeID | undefined, index = 0): VarIndex => {\n  if (!rootID) return undefined\n  const node = tree[rootID]\n  if (!node) return undefined\n  switch (node.type) {\n    case \"VARIABLE\":\n      return rootID === goalID ? index : undefined\n    case \"ABSTRACTION\":\n      return indexFrom(tree, goalID, node.child, index)\n    case \"APPLICATION\": {\n      const left = indexFrom(tree, goalID, node.left, index)\n      return left === undefined ? indexFrom(tree, goalID, node.right, index) : left\n    }\n    default:\n      return undefined\n  }\n}\n\nexport const getPrimitive = (nodeID: NodeID | TreeNode, state: TreeState): Primitive | undefined => {\n  const node = typeof nodeID === \"object\" ? nodeID : state.nodes[nodeID]\n  if (node?.primitives.length) {\n    return state.primitives[node.primitives[node.primitives.length - 1]]\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport { TreeState } from \"board/state/tree\"\nimport { useDispatch as _useDispatch } from \"react-redux\"\nimport undoable, { includeAction, StateWithHistory } from \"redux-undo\"\nimport treeSlice from \"./tree/reducers\"\nimport visualSlice from \"./visual/reducers\"\nexport * from \"./tree\"\nexport * from \"./visual\"\nexport * from \"./hooks\"\nexport * from \"./selectors\"\n\ntype TreeAction = keyof typeof treeSlice.actions\n\nconst include = (actions: TreeAction[]) => includeAction(actions.map(action => `tree/${action}`))\n\nconst groupFunction = (_: TreeAction, currentState: TreeState, stateHistory: StateWithHistory<TreeState>) => {\n  const reduction = currentState.reduction || stateHistory.present.reduction\n  if (reduction && Object.keys(reduction.substitutions).length === 0)\n    switch (reduction.type) {\n      case \"FADE\":\n      case \"REMOVE\":\n        return \"NO_EFFECT\"\n      default:\n    }\n  return null\n}\n\nconst store = configureStore({\n  reducer: {\n    tree: undoable(treeSlice.reducer, {\n      filter: include([\"setRoot\", \"queueReduction\", \"nextReductionStage\"]),\n      groupBy: groupFunction as any\n    }),\n    visual: visualSlice.reducer\n  }\n})\n\nexport type BoardState = ReturnType<typeof store.getState>\n\nexport default store\n\nexport type Dispatcher = typeof store.dispatch\n\nexport const useDispatch: () => Dispatcher = _useDispatch\n","export * from \"./types\"\nexport * from \"./reducers\"\nexport * from \"./util\"\n","import { PayloadAction, createSlice } from \"@reduxjs/toolkit\"\nimport _ from \"lodash\"\nimport {\n  TreeState,\n  Tree,\n  initialTreeState,\n  ReductionStage,\n  VarName,\n  NodeID,\n  PrimitiveID,\n  LambdaReducerID\n} from \"./types\"\nimport { traverseTree, partialMapTree, createVar, createAbs, createAppl, setNextStage, directChildren } from \"./util\"\n\nconst treeSlice = createSlice({\n  name: \"tree\",\n  initialState: initialTreeState,\n  reducers: {\n    clearTree: state => ({ root: \"\", originalRoot: \"\", nodes: {}, primitives: {}, constants: state.constants }),\n    setRoot: (state, action: PayloadAction<NodeID>) => {\n      state.root = action.payload\n    },\n    setOriginalRoot: (state, action: PayloadAction<NodeID>) => {\n      state.originalRoot = action.payload\n      state.root = action.payload\n    },\n    resetRoot: state => {\n      state.root = state.originalRoot\n    },\n    addVariable: (state, action: PayloadAction<{ nodeID: NodeID; binder?: NodeID; name: VarName }>) => {\n      const { nodeID, binder, name } = action.payload\n      const varNode = createVar(name, binder)\n      state.nodes[nodeID] = varNode\n    },\n    addAbstraction: (state, action: PayloadAction<{ nodeID: NodeID; variableName: VarName; child?: NodeID }>) => {\n      const { nodeID, variableName, child } = action.payload\n      const absNode = createAbs(variableName, child)\n      state.nodes[nodeID] = absNode\n    },\n    addApplication: (state, action: PayloadAction<{ nodeID: NodeID; left?: NodeID; right?: NodeID }>) => {\n      const { nodeID, left, right } = action.payload\n      const absNode = createAppl(left, right)\n      state.nodes[nodeID] = absNode\n    },\n    queueReduction: (state, action: PayloadAction<ReductionStage | undefined>) => {\n      const reduction = action.payload\n      if (reduction) {\n        removeReductionPrimitives(state, reduction)\n        addReductionPrimitives(state, reduction)\n        addReplacementNodes(reduction, state)\n        state.reduction = reduction\n      }\n    },\n    nextReductionStage: state => {\n      if (state.reduction) {\n        setNextStage(state)\n        if (state.reduction) {\n          if (state.reduction.type === \"SUBSTITUTE\") replaceVars(state.reduction, state)\n          else if (state.reduction.type === \"REMOVE\") removeReduced(state)\n        }\n      }\n    },\n    setConstant: (state, action: PayloadAction<{ name: string; text: string }>) => {\n      const { name, text } = action.payload\n      state.constants[name] = text\n    },\n    setReducer: (state, action: PayloadAction<LambdaReducerID>) => {\n      state.reducer = action.payload\n    },\n    createPrimitive: (state, action: PayloadAction<{ name: string; primID: PrimitiveID; rootID: NodeID }>) => {\n      const { name, primID, rootID } = action.payload\n      addPrimitive(state, primID, rootID, name)\n    },\n    destructurePrimitive: (state, action: PayloadAction<PrimitiveID>) => {\n      removePrimitive(state, action.payload)\n    }\n  }\n})\n\nexport default treeSlice\n\nexport const {\n  clearTree,\n  setRoot,\n  setOriginalRoot,\n  resetRoot,\n  addVariable,\n  addAbstraction,\n  addApplication,\n  queueReduction,\n  nextReductionStage,\n  setConstant,\n  setReducer,\n  createPrimitive,\n  destructurePrimitive\n} = treeSlice.actions\n\nconst removeReductionPrimitives = (state: TreeState, reduction: ReductionStage) =>\n  _.uniq(_.keys(reduction.substitutions).flatMap(replacedID => state.nodes[replacedID].primitives)).forEach(primID =>\n    removePrimitive(state, primID)\n  )\n\nconst addReductionPrimitives = (state: TreeState, reduction: ReductionStage) => {\n  _.forEach(reduction.substitutions, sub =>\n    _.forEach(sub.primitives, (newID, oldID) => {\n      const oldPrim = state.primitives[oldID]\n      addPrimitive(state, newID, sub.nodes[oldPrim.rootID], oldPrim.name)\n    })\n  )\n}\n\nconst addPrimitive = (state: TreeState, primID: PrimitiveID, rootID: NodeID, name: string) => {\n  state.primitives[primID] = { name, rootID }\n  state.nodes = {\n    ...state.nodes,\n    ...partialMapTree(state.nodes, node => ({ ...node, primitives: [...node.primitives, primID] }), rootID)\n  }\n}\n\nconst removePrimitive = (state: TreeState, primitiveID: PrimitiveID) => {\n  const primitive = state.primitives[primitiveID]\n  if (primitive) {\n    delete state.primitives[primitiveID]\n    traverseTree(\n      state.nodes,\n      node => {\n        _.remove(node.primitives, primID => primID === primitiveID)\n      },\n      primitive.rootID\n    )\n  }\n}\n\nconst removeReduced = (state: TreeState) => {\n  const reduction = state.reduction\n  if (reduction) {\n    const newChild = directChildren(state.nodes[reduction.abs])[0]\n    const replaceRoot = state.root === reduction.parentApplication\n    const replaceFrom = reduction.visibleParent === reduction.parentApplication ? state.root : reduction.visibleParent\n    replaceChild(reduction.parentApplication, newChild, replaceFrom, state.nodes)\n    const toRemove = [..._.keys(reduction.substitutions), reduction.abs, reduction.consumed]\n    toRemove.forEach(nodeID => _.unset(state.nodes, nodeID))\n    if (replaceRoot) {\n      if (state.originalRoot === state.root) state.originalRoot = newChild\n      state.root = newChild\n    }\n  }\n}\n\nconst addReplacementNodes = (reduction: ReductionStage, state: TreeState) => {\n  const tree = state.nodes\n  _.forEach(reduction.substitutions, substitution => {\n    const getNodeSub = (nodeID: NodeID) => substitution.nodes[nodeID] || nodeID\n    const getPrimSub = (primID: PrimitiveID) => substitution.primitives[primID] || primID\n\n    traverseTree(\n      tree,\n      (node, nodeID) => {\n        const subID = getNodeSub(nodeID)\n        switch (node.type) {\n          case \"VARIABLE\": {\n            tree[subID] = createVar(node.name, node.binder && getNodeSub(node.binder), node.primitives.map(getPrimSub))\n            break\n          }\n          case \"ABSTRACTION\": {\n            tree[subID] = createAbs(\n              node.variableName,\n              node.child ? getNodeSub(node.child) : node.child,\n              node.primitives.map(getPrimSub)\n            )\n            break\n          }\n          case \"APPLICATION\": {\n            const newLeft = node.left ? getNodeSub(node.left) : node.left\n            const newRight = node.right ? getNodeSub(node.right) : node.right\n            tree[subID] = createAppl(newLeft, newRight, node.primitives.map(getPrimSub))\n            break\n          }\n          default:\n        }\n      },\n      reduction.consumed\n    )\n  })\n}\n\nconst replaceVars = (reduction: ReductionStage, state: TreeState) => {\n  _.forEach(reduction.substitutions || {}, (sub, toReplace: NodeID) =>\n    replaceChild(toReplace, sub.nodes[reduction.consumed] || reduction.consumed, state.root, state.nodes)\n  )\n}\n\nconst replaceChild = (oldChild: NodeID, newChild: NodeID, rootID: NodeID, tree: Tree) => {\n  traverseTree(\n    tree,\n    (node, nodeID) => {\n      switch (node.type) {\n        case \"ABSTRACTION\":\n          if (node.child === oldChild) tree[nodeID] = createAbs(node.variableName, newChild)\n          break\n        case \"APPLICATION\":\n          tree[nodeID] =\n            node.left === oldChild\n              ? createAppl(newChild, node.right)\n              : node.right === oldChild\n              ? createAppl(node.left, newChild)\n              : node\n          break\n        default:\n      }\n    },\n    rootID\n  )\n}\n","export type NodeID = string\nexport type RefID = string\nexport type VarName = string\nexport type VarIndex = number | undefined\n\nexport type NodeType = \"NULL\" | \"VARIABLE\" | \"ABSTRACTION\" | \"APPLICATION\"\n\ninterface BaseExpression {\n  type: NodeType\n  primitives: PrimitiveID[]\n}\n\ninterface NullExpression extends BaseExpression {\n  type: \"NULL\"\n}\n\nexport interface Variable extends BaseExpression {\n  type: \"VARIABLE\"\n  binder?: NodeID\n  name: VarName\n}\n\nexport interface Abstraction extends BaseExpression {\n  type: \"ABSTRACTION\"\n  child?: NodeID\n  variableName: VarName\n}\n\nexport interface Application extends BaseExpression {\n  type: \"APPLICATION\"\n  left?: NodeID\n  right?: NodeID\n}\n\nexport type TreeNode = NullExpression | Variable | Abstraction | Application\n\nexport type Tree = { [nodeId in NodeID]: TreeNode }\n\nexport type NodeSubstitution = { [nodeID in NodeID]: NodeID }\n\nexport type PrimitiveSubstitution = { [primID in PrimitiveID]: PrimitiveID }\n\nexport type Substitution = {\n  nodes: NodeSubstitution\n  primitives: PrimitiveSubstitution\n}\nexport type Substitutions = { [variable in NodeID]: Substitution }\n\nexport const REDUCTION_STAGES = [\n  \"SELECT\",\n  \"CONSUME\",\n  \"LIFT\",\n  \"HOVER\",\n  \"UNBIND\",\n  \"SUBSTITUTE\",\n  \"FADE\",\n  \"REMOVE\"\n] as const\n\nexport interface ReductionStage {\n  type: typeof REDUCTION_STAGES[number]\n  visibleParent: NodeID\n  parentApplication: NodeID\n  abs: NodeID\n  child: NodeID\n  consumed: NodeID\n  substitutions: Substitutions\n  reducer: LambdaReducerID\n}\n\nexport type LambdaReducerID = string | number\n\nexport type ExprConstant = string\n\nexport type ConstName = string\n\nexport type ExprConstants = { [constName in ConstName]: ExprConstant }\n\nexport type PrimitiveID = string\n\nexport type Primitive = {\n  name: string\n  rootID: string\n}\n\nexport type Primitives = { [primID in PrimitiveID]: Primitive }\n\nexport interface TreeState {\n  root: NodeID\n  originalRoot: NodeID\n  nodes: Tree\n  primitives: Primitives\n  reducer?: LambdaReducerID\n  reduction?: ReductionStage\n  constants: ExprConstants\n}\n\nexport const initialTreeState: TreeState = {\n  nodes: {},\n  root: \"\",\n  originalRoot: \"\",\n  primitives: {},\n  constants: {\n    RECURSE: \"λ f. (λ x. f (x x)) (λ x. f (x x))\",\n    PLUS: \"λ a b f x.a f (b f x)\",\n    MULT: \"λ a b f.a (b f)\",\n    SUCC: \"λ b f x.f (b f x)\",\n    POW: \"λ b e.e b\",\n    PRED: \"λ b f x.b (λ c d.d (c f)) (λ e.x) (λ e.e)\",\n    SUb: \"λ a b.b PRED a\",\n    TRUE: \"λ x y.x\",\n    FALSE: \"λ x y.y\",\n    AND: \"λ p q.p q p\",\n    OR: \"λ p q.p p q\",\n    NOT: \"λ p.p FALSE TRUE\",\n    IFTHENELSE: \"λ p a b.p a b\",\n    ISZERO: \"λ b.b (λ x.FALSE) TRUE\",\n    LEQ: \"λ a b.ISZERO (SUB a b)\"\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { NodeID } from \"board/state/tree\"\nimport {\n  VisualState,\n  initialVisualState,\n  DimensionSetting,\n  AnimationMode,\n  AnimationSettings,\n  AnimationSetting\n} from \"./types\"\n\nconst visualSlice = createSlice({\n  name: \"visual\",\n  initialState: initialVisualState as VisualState,\n  reducers: {\n    setSelected: (state, action: PayloadAction<NodeID[]>) => {\n      state.selected = action.payload\n    },\n    setHighlighted: (state, action: PayloadAction<NodeID[]>) => {\n      state.highlighted = action.payload\n    },\n    setDimension: (state, action: PayloadAction<{ dimension: DimensionSetting; value: number }>) => {\n      const { dimension, value } = action.payload\n      state.dimensions[dimension] = value\n    },\n    setMode: (state, action: PayloadAction<AnimationMode>) => {\n      state.animation.mode = action.payload\n    },\n    setAnimationSetting: <A extends AnimationSettings, K extends AnimationSetting>(\n      state: VisualState,\n      action: PayloadAction<{ setting: K; value: A[K] }>\n    ) => {\n      const { setting, value } = action.payload\n      state.animation.settings[setting] = value\n    },\n    setAnimationEnabled: (state, action: PayloadAction<boolean>) => {\n      state.animation.enabled = action.payload\n    },\n    updateDimensions: (state, action: PayloadAction<{ [dimension in DimensionSetting]: number }>) => {\n      state.dimensions = { ...state.dimensions, ...action.payload }\n    }\n  }\n})\n\nexport default visualSlice\n\nexport const {\n  setSelected,\n  setHighlighted,\n  setDimension,\n  setMode,\n  setAnimationSetting,\n  setAnimationEnabled,\n  updateDimensions\n} = visualSlice.actions\n","import { Orchestration, Tween } from \"framer-motion\"\nimport { NodeID } from \"../tree\"\n\nexport type Color = string\n\nconst defaultTheme = {\n  text: \"rgba(248, 248, 248,1)\",\n  highlightedStroke: \"rgba(62, 61, 50, 1)\",\n  selectedStroke: \"rgba(62, 61, 50, 1)\",\n  stroke: \"rgba(139, 139, 139, 1)\",\n  transparent: \"rgba(0, 0, 0, 0)\",\n  unbinded: \"rgba(0, 0, 0, 1)\"\n}\n\nexport type Theme = typeof defaultTheme\n\nexport type ThemeElement = keyof Theme\n\nconst defaultDimensions = {\n  circleRadius: 32,\n  heightMargin: 40,\n  strokeWidth: 4,\n  widthMargin: 50\n}\n\nexport type DimensionSettings = typeof defaultDimensions\n\nexport type DimensionSetting = keyof DimensionSettings\n\nexport type EventHandler = (nodeID: NodeID) => void\n\nexport type AnimationSetting = keyof AnimationSettings\n\nexport type AnimationSettings = Orchestration & Tween\n\nexport type AnimationMode = \"STOP\" | \"PLAY\" | \"FORWARD\" | \"REVERSE\"\n\nexport interface AnimationState {\n  settings: AnimationSettings\n  enabled: boolean\n  mode: AnimationMode\n}\n\nconst defaultAnimationState: AnimationState = {\n  settings: {\n    type: \"tween\",\n    duration: 0.5\n  },\n  enabled: true,\n  mode: \"STOP\"\n}\n\nexport interface VisualState {\n  selected: NodeID[]\n  highlighted: NodeID[]\n  theme: Theme\n  dimensions: DimensionSettings\n  animation: AnimationState\n}\n\nexport const initialVisualState: VisualState = {\n  selected: [],\n  highlighted: [],\n  theme: defaultTheme,\n  dimensions: defaultDimensions,\n  animation: defaultAnimationState\n}\n","export * from \"./types\"\nexport * from \"./reducers\"\n","export * from \"./coords\"\nexport * from \"./styles\"\nexport * from \"./joins\"\n\n","import { createSelector } from \"@reduxjs/toolkit\"\nimport {\n  DimensionSettings,\n  BoardState,\n  NodeID,\n  Tree,\n  TreeState,\n  ReductionStage,\n  joinsSelector,\n  NodeJoins,\n  visibleChildren,\n  directChildren\n} from \"board/state\"\nimport _ from \"lodash\"\nimport { constructDimensions } from \"./dimensions\"\nimport { Coords, CoordOffsets, NodeCoord, CoordOffset, NodeDimensions } from \"./types\"\n\nexport * from \"./types\"\n\nconst constructCoords = (tree: TreeState, settings: DimensionSettings, joins: NodeJoins): Coords => {\n  const root = tree.root\n  if (root) {\n    const dimensions = constructDimensions(tree, settings, joins)\n    const coordOffsets = calculateCoordOffsets(settings, joins, tree)\n\n    const coords = fillCoords(root, dimensions, tree.nodes, settings, coordOffsets)\n    const afterReduction = tree.reduction ? addOverrides(coords, tree, tree.reduction, settings) : coords\n    if (tree.nodes[root].type === \"APPLICATION\") delete afterReduction[root]\n    return afterReduction\n  } else return {}\n}\n\nexport const coordsSelector = createSelector(\n  (state: BoardState) => state.tree.present,\n  (state: BoardState) => state.visual.dimensions,\n  (state: BoardState) => joinsSelector(state),\n  constructCoords\n)\n\nconst addOverrides = (\n  coords: Coords,\n  state: TreeState,\n  reduction: ReductionStage,\n  settings: DimensionSettings\n): Coords => {\n  const replacementOverrides = _.reduce(\n    reduction.substitutions,\n    (coords, substitution, unbindedVar) =>\n      _.reduce(\n        substitution.nodes,\n        (coords, replacement, toReplace) => {\n          if (coords[toReplace]) {\n            const yOffset = settings.heightMargin * 2 + settings.circleRadius * 4\n            switch (reduction.type) {\n              case \"SELECT\":\n              case \"CONSUME\":\n                return {\n                  ...coords,\n                  [replacement]: {\n                    ...coords[toReplace],\n                    nodeID: replacement\n                  }\n                }\n              case \"LIFT\":\n                return {\n                  ...coords,\n                  [replacement]: {\n                    ...coords[toReplace],\n                    y: coords[toReplace].y - yOffset,\n                    nodeID: replacement\n                  }\n                }\n              case \"HOVER\":\n              case \"UNBIND\":\n                return {\n                  ...coords,\n                  [replacement]: {\n                    ...coords[toReplace],\n                    y: coords[toReplace].y - yOffset,\n                    x: coords[unbindedVar].x - (coords[reduction.consumed].x - coords[toReplace].x),\n                    nodeID: replacement\n                  }\n                }\n              default:\n                return coords\n            }\n          }\n          return coords\n        },\n        coords\n      ),\n    coords\n  )\n  if (state.nodes[reduction.abs]) {\n    const newChildID = directChildren(state.nodes[reduction.abs])[0]\n    const newChild = newChildID ? state.nodes[newChildID] : undefined\n    if (newChild && newChild.type === \"APPLICATION\" && coords[reduction.parentApplication]) {\n      return {\n        [newChildID]: { ...coords[reduction.abs], nodeID: newChildID },\n        ...replacementOverrides\n      }\n    }\n  }\n  return {\n    ...replacementOverrides\n  }\n}\n\nconst calculateCoordOffsets = (settings: DimensionSettings, joins: NodeJoins, state: TreeState): CoordOffsets => {\n  const rootOffset =\n    state.nodes[state.root]?.type === \"APPLICATION\"\n      ? { [state.root]: { x: -(settings.widthMargin + settings.circleRadius) } }\n      : {}\n  const reductionOffsets = (reduction: ReductionStage) => {\n    const xOffset = settings.widthMargin + settings.circleRadius\n    const afterConsumed = visibleChildren(reduction.visibleParent, state.nodes)[2]\n    return {\n      [reduction.consumed]: { x: -xOffset },\n      ...(afterConsumed ? { [afterConsumed]: { x: xOffset } } : {})\n    }\n  }\n\n  const joinOffsets = (): CoordOffsets =>\n    _.reduce(\n      joins,\n      (offsets, join, nodeID) => ({\n        ...offsets,\n        ...(join.type === \"ABSTRACTION\" ? { [nodeID]: { x: -(settings.circleRadius + settings.widthMargin) } } : {})\n      }),\n      {}\n    )\n\n  const jOffsets = joinOffsets()\n  if (!state.reduction || state.reduction.type === \"SELECT\") return _.mergeWith({}, jOffsets, rootOffset, addOffset)\n  const redOffsets = reductionOffsets(state.reduction)\n  return _.mergeWith({}, jOffsets, redOffsets, rootOffset, addOffset)\n}\n\nconst fillCoords = (\n  rootID: NodeID,\n  dimensions: NodeDimensions,\n  tree: Tree,\n  settings: DimensionSettings,\n  offsets: CoordOffsets,\n  baseX: number = 0,\n  baseY: number = 0\n): Coords => {\n  const root = tree[rootID]\n  if (root) {\n    const coord = addOffset(\n      { nodeID: rootID, type: root.type, ...dimensions[rootID], x: baseX, y: baseY },\n      offsets[rootID]\n    )\n    return root.primitives.length\n      ? { [rootID]: coord }\n      : visibleChildren(root, tree).reduce(\n          (current, nodeID) => {\n            const childCoord = fillCoords(nodeID, dimensions, tree, settings, offsets, current.baseX, baseY)\n            if (!childCoord[nodeID]) return current\n            return {\n              baseX: childCoord[nodeID].x + childCoord[nodeID].w + settings.widthMargin,\n              coords: { ...current.coords, ...childCoord }\n            }\n          },\n          {\n            baseX: coord.x + settings.widthMargin + settings.circleRadius,\n            coords: {\n              [rootID]: coord\n            }\n          }\n        ).coords\n  }\n  return {}\n}\n\nconst addOffset = <A extends NodeCoord | CoordOffset>(coord: A, offset?: CoordOffset): A => {\n  if (!coord) return offset as A\n  else if (offset)\n    return { ...(coord || {}), x: (coord.x || 0) + (offset.x || 0), y: (coord.y || 0) + (offset.y || 0) } as A\n  return coord\n}\n","import { createSelector } from \"@reduxjs/toolkit\"\nimport { reduceTree, Tree, PrimitiveID, directChildren } from \"board/state/tree\"\nimport _ from \"lodash\"\nimport randomcolor from \"randomcolor\"\nimport { AnimationSettings } from \"../visual\"\nimport { BoardState, NodeID, TreeState, Color, Theme, DimensionSettings, TreeNode, ReductionStage } from \"..\"\n\ntype VarColors = { [bindingID in NodeID]: Color }\n\ninterface StrokeStyle {\n  stroke: string\n  strokeWidth: number\n  strokeLinecap?: string\n}\n\ninterface BaseNodeStyle {\n  fill: string\n  stroke: StrokeStyle\n  animation: AnimationSettings\n}\n\nexport interface VarStyle extends BaseNodeStyle {\n  type: \"VAR_STYLE\"\n}\n\nexport interface AbsStyle extends BaseNodeStyle {\n  type: \"ABS_STYLE\"\n  input: VarStyle\n  output: VarStyle\n}\n\nexport interface ApplStyle extends BaseNodeStyle {\n  type: \"APPL_STYLE\"\n  output: VarStyle\n}\n\nexport interface PrimStyle extends BaseNodeStyle {\n  type: \"PRIM_STYLE\"\n  text: { fill: string }\n}\n\nexport type NodeStyle = VarStyle | AbsStyle | ApplStyle | PrimStyle\ntype NodeStyles = { [nodeID in NodeID]: NodeStyle }\n\ntype StylesState = {\n  tree: TreeState\n  theme: Theme\n  copies: { [nodeID in NodeID]: NodeID }\n  colors: VarColors\n  dimensions: DimensionSettings\n  animation: AnimationSettings\n  highlighted: NodeID[]\n  selected: NodeID[]\n}\n\ntype StyleSettings = {\n  transparent?: boolean\n  highlighted?: boolean\n  selected?: boolean\n}\n\nconst createStyles = (state: StylesState): NodeStyles => {\n  const tree = state.tree.nodes\n  const reduction = state.tree.reduction\n  const initStyles: NodeStyles = _.pickBy(\n    _.mapValues(tree, (_, nodeID: NodeID) => createStyle(nodeID, state, {})),\n    (style): style is NodeStyle => _.isObject(style)\n  )\n  if (!reduction) return initStyles\n  switch (reduction.type) {\n    case \"SELECT\":\n      return {\n        ...initStyles,\n        ...overrideReplacement(reduction, { transparent: true }, state),\n        ...overrideConsumed(reduction, { highlighted: true }, state),\n        ...overrideUnbinded(reduction, { highlighted: true }, state)\n      }\n    case \"UNBIND\":\n      return {\n        ...initStyles,\n        ...overrideReplacement(reduction, { highlighted: true }, state),\n        ...overrideConsumed(reduction, { highlighted: true }, state),\n        ...overrideUnbinded(reduction, { transparent: true }, state)\n      }\n    case \"FADE\":\n      return {\n        ...initStyles,\n        ...overrideReplacement(reduction, { highlighted: true }, state),\n        ...overrideReplaced(reduction, { transparent: true }, state),\n        ...overrideRemoved(reduction, { transparent: true }, state),\n        ...overrideConsumed(reduction, { transparent: true }, state)\n      }\n    default:\n      return {\n        ...initStyles,\n        ...overrideReplacement(reduction, { highlighted: true }, state),\n        ...overrideConsumed(reduction, { highlighted: true }, state),\n        ...overrideUnbinded(reduction, { highlighted: true }, state)\n      }\n  }\n}\n\nconst overrideUnbinded = (reduction: ReductionStage, override: StyleSettings, state: StylesState): NodeStyles =>\n  _.reduce(\n    reduction.substitutions,\n    (styles, _, unbindedVar) => {\n      const style = createStyle(unbindedVar, state, override)\n      return style ? { ...styles, [unbindedVar]: style } : styles\n    },\n    {}\n  )\n\nconst overrideReplacement = (reduction: ReductionStage, override: StyleSettings, state: StylesState): NodeStyles =>\n  _.reduce(\n    reduction.substitutions,\n    (styles: NodeStyles, substitution) => {\n      const newNodeID = substitution.nodes[reduction.consumed]\n      if (state.tree.nodes[newNodeID]) {\n        const style = createStyle(newNodeID, state, override)\n        return style ? { ...styles, [newNodeID]: style } : styles\n      }\n      return styles\n    },\n    {}\n  )\n\nconst overrideReplaced = (reduction: ReductionStage, override: StyleSettings, state: StylesState): NodeStyles =>\n  reduceTree(\n    state.tree.nodes,\n    (styles, _, nodeID) => {\n      const style = createStyle(nodeID, state, override)\n      return style ? { ...styles, [nodeID]: style } : styles\n    },\n    {},\n    reduction.consumed\n  )\n\nconst overrideConsumed = (reduction: ReductionStage, override: StyleSettings, state: StylesState): NodeStyles => {\n  if (state.tree.nodes[reduction.consumed]) {\n    const style = createStyle(reduction.consumed, state, override)\n    return style ? { [reduction.consumed]: style } : {}\n  }\n  return {}\n}\n\nconst overrideRemoved = (reduction: ReductionStage, override: StyleSettings, state: StylesState): NodeStyles => {\n  const absStyle = createStyle(reduction.abs, state, override)\n  const applStyle = createStyle(reduction.parentApplication, state, override)\n  return {\n    ...(absStyle ? { [reduction.abs]: absStyle } : {}),\n    ...(applStyle ? { [reduction.parentApplication]: applStyle } : {})\n  }\n}\n\nconst createStyle = (nodeID: NodeID, state: StylesState, overrides: StyleSettings): NodeStyle | undefined => {\n  const styleID = state.copies[nodeID] || nodeID\n  const node = state.tree.nodes[styleID]\n  const binderID = node?.type === \"VARIABLE\" ? node.binder || styleID : styleID\n  const highlighted = state.highlighted.includes(styleID) || state.highlighted.includes(binderID)\n  const selected = state.selected.includes(styleID) || state.selected.includes(binderID)\n  if (node?.primitives?.length)\n    return createPrimStyle(node.primitives[node.primitives.length - 1], state, { highlighted, selected, ...overrides })\n  switch (node?.type) {\n    case \"VARIABLE\":\n      return createVarStyle(styleID, state, { highlighted, selected, ...overrides })\n    case \"ABSTRACTION\":\n      return createAbsStyle(styleID, state, { highlighted, selected, ...overrides })\n    case \"APPLICATION\":\n      return createApplStyle(styleID, state, { highlighted, selected, ...overrides })\n    default:\n      return undefined\n  }\n}\n\nconst createVarStyle = (\n  nodeID: NodeID,\n  state: StylesState,\n  { transparent, selected, highlighted }: StyleSettings\n): VarStyle => {\n  const node = state.tree.nodes[nodeID]\n  const theme = state.theme\n  const binderID = node?.type === \"VARIABLE\" ? node.binder || nodeID : nodeID\n  const color = transparent ? theme.transparent : state.colors[binderID] || theme.stroke\n  return {\n    type: \"VAR_STYLE\",\n    fill: color,\n    animation: state.animation,\n    stroke: {\n      stroke: transparent\n        ? theme.transparent\n        : node && node.type !== \"VARIABLE\"\n        ? color\n        : selected\n        ? theme.selectedStroke\n        : highlighted\n        ? theme.highlightedStroke\n        : !node\n        ? color\n        : theme.transparent,\n      strokeWidth: state.dimensions.strokeWidth\n    }\n  }\n}\n\nconst createAbsStyle = (\n  nodeID: NodeID,\n  state: StylesState,\n  { transparent, selected, highlighted }: StyleSettings\n): AbsStyle => {\n  const theme = state.theme\n  return {\n    type: \"ABS_STYLE\",\n    fill: theme.transparent,\n    animation: state.animation,\n    stroke: {\n      stroke: transparent\n        ? theme.transparent\n        : selected\n        ? theme.selectedStroke\n        : highlighted\n        ? theme.highlightedStroke\n        : theme.stroke,\n      strokeWidth: state.dimensions.strokeWidth,\n      strokeLinecap: \"square\"\n    },\n    input: createVarStyle(nodeID, state, { transparent, selected, highlighted }),\n    output: createVarStyle(\"\", state, { transparent, selected, highlighted })\n  }\n}\n\nconst createApplStyle = (\n  nodeID: NodeID,\n  state: StylesState,\n  { transparent, selected, highlighted }: StyleSettings\n): ApplStyle => {\n  const theme = state.theme\n  return {\n    type: \"APPL_STYLE\",\n    fill: theme.transparent,\n    animation: state.animation,\n    stroke: {\n      stroke: transparent\n        ? theme.transparent\n        : selected\n        ? state.theme.selectedStroke\n        : highlighted\n        ? state.theme.highlightedStroke\n        : state.theme.stroke,\n      strokeWidth: state.dimensions.strokeWidth\n    },\n    output: createVarStyle(\"\", state, { transparent, selected, highlighted })\n  }\n}\n\nconst createPrimStyle = (\n  primID: PrimitiveID,\n  state: StylesState,\n  { transparent, selected, highlighted }: StyleSettings\n): PrimStyle => {\n  const theme = state.theme\n  return {\n    type: \"PRIM_STYLE\",\n    fill: transparent ? theme.transparent : theme.stroke,\n    animation: state.animation,\n    text: {\n      fill: transparent ? theme.transparent : theme.text\n    },\n    stroke: {\n      stroke: transparent\n        ? theme.transparent\n        : selected\n        ? state.theme.selectedStroke\n        : highlighted\n        ? state.theme.highlightedStroke\n        : state.theme.stroke,\n      strokeWidth: state.dimensions.strokeWidth\n    }\n  }\n}\n\nexport const stylesSelector = createSelector(\n  (state: BoardState) => ({\n    tree: state.tree.present,\n    colors: colorsSelector(state),\n    copies: state.tree.present.reduction\n      ? constructCopyMap(state.tree.present.reduction, state.tree.present.nodes)\n      : {},\n    theme: state.visual.theme,\n    dimensions: state.visual.dimensions,\n    animation: state.visual.animation.settings,\n    selected: state.visual.selected,\n    highlighted: state.visual.highlighted\n  }),\n  createStyles\n)\n\nconst constructCopyMap = (reduction: ReductionStage, tree: Tree): { [nodeID in NodeID]: NodeID } => {\n  const copyReplaced = () =>\n    _.reduce(\n      reduction.substitutions,\n      (copies, sub) => ({\n        ...copies,\n        ..._.reduce(sub.nodes, (copies, toReplace, toCopy) => ({ ...copies, [toReplace]: toCopy }), {})\n      }),\n      {}\n    )\n\n  const copyParent = () => {\n    const newChildID = directChildren(tree[reduction.abs])[0]\n    const newChild = newChildID ? tree[newChildID] : undefined\n    return newChild && newChild.type === \"APPLICATION\" ? { [newChildID]: reduction.parentApplication } : {}\n  }\n\n  switch (reduction.type) {\n    case \"FADE\": {\n      return {\n        ...copyReplaced(),\n        ...copyParent()\n      }\n    }\n    case \"REMOVE\":\n      return {}\n    default:\n      return copyReplaced()\n  }\n}\n\nconst createColors = (tree: TreeState, theme: Theme): VarColors => {\n  return _.mapValues(tree.nodes, (node, nodeID) => createColor(nodeID, node, theme))\n}\n\nconst createColor = (nodeID: NodeID, node: TreeNode, theme: Theme): Color => {\n  const color = (nodeID: NodeID) => randomcolor({ seed: nodeID, luminosity: \"bright\" })\n  switch (node.type) {\n    case \"ABSTRACTION\":\n      return color(nodeID)\n    case \"VARIABLE\": {\n      return theme.unbinded\n    }\n    default:\n      return \"transparent\"\n  }\n}\n\nconst colorsSelector = createSelector(\n  (state: BoardState) => state.tree.present,\n  (state: BoardState) => state.visual.theme,\n  createColors\n)\n","import { NodeType, directChildren, NodeID, TreeState, Tree, BoardState, ReductionStage } from \"board/state\"\nimport { createSelector } from \"reselect\"\n\nexport type NodeJoins = { [nodeID in NodeID]: { distance: number; jointTo: NodeID; type: NodeType } }\n\nconst constructJoins = (state: TreeState) => ({\n  ...abstractionJoins(state.nodes, state.root, state.reduction),\n  ...applicationJoins(state.nodes, state.root)\n})\n\nconst abstractionJoins = (\n  tree: Tree,\n  rootID: NodeID = \"\",\n  reduction?: ReductionStage,\n  joins: NodeJoins = {},\n  parentID: NodeID = \"\"\n): NodeJoins => {\n  const parentNode = tree[parentID]\n  const root = tree[rootID]\n  if (!root) return joins\n  if (!parentNode || parentNode.type !== \"ABSTRACTION\" || root.type !== \"ABSTRACTION\")\n    return directChildren(root).reduce((joins, child) => abstractionJoins(tree, child, reduction, joins, rootID), joins)\n  const parentJoin = joins[parentID]\n  if (reduction) {\n    const reductionAbs = reduction.abs\n    const reductionChild = reduction.child\n    if (reductionAbs === parentID && reductionChild !== rootID) return joins\n  }\n  const newJoins = {\n    ...joins,\n    [rootID]: {\n      jointTo: parentJoin ? parentJoin.jointTo : parentID,\n      distance: parentJoin ? parentJoin.distance + 1 : 1,\n      type: root.type\n    }\n  }\n  return abstractionJoins(tree, root.child, reduction, newJoins, rootID)\n}\n\nconst applicationJoins = (tree: Tree, rootID: NodeID = \"\", joins: NodeJoins = {}, parentID: NodeID = \"\"): NodeJoins => {\n  const parentNode = tree[parentID]\n  const root = tree[rootID]\n  if (!root) return joins\n  if (!parentNode || parentNode.type !== \"APPLICATION\" || root.type !== \"APPLICATION\")\n    return directChildren(root).reduce((joins, child) => applicationJoins(tree, child, joins, rootID), joins)\n  const parentJoin = joins[parentID]\n  const newJoins = {\n    ...joins,\n    [rootID]: {\n      jointTo: parentJoin ? parentJoin.jointTo : parentID,\n      distance: parentJoin ? parentJoin.distance + 1 : 1,\n      type: root.type\n    }\n  }\n  return {\n    ...applicationJoins(tree, root.left, newJoins),\n    ...applicationJoins(tree, root.right, newJoins, rootID)\n  }\n}\n\nexport const joinsSelector = createSelector((state: BoardState) => state.tree.present, constructJoins)\n","import { createSelector } from \"@reduxjs/toolkit\"\nimport { BoardState, Tree, NodeID, NodeJoins, joinsSelector, visibleChildren } from \"board/state\"\nimport _ from \"lodash\"\n\nconst stringifyTree = (tree: Tree, rootID: NodeID, joins: NodeJoins): string => {\n  const furthestJoins = _.reduce(\n    joins,\n    (furthestJoins, join, nodeID) => {\n      const furthest: NodeID = furthestJoins[join.jointTo]\n      if (furthest && joins[furthest].distance > join.distance) return furthestJoins\n      return { ...furthestJoins, [join.jointTo]: nodeID }\n    },\n    {} as { [nodeID in NodeID]: NodeID }\n  )\n  const joinNames = (tree: Tree, end: NodeID, start?: NodeID): NodeID[] => {\n    if (!start) return []\n    const node = tree[start || \"\"]\n    switch (node.type) {\n      case \"ABSTRACTION\":\n        return [node.variableName, ...(start === end ? [] : joinNames(tree, end, node.child))]\n      default:\n        return []\n    }\n  }\n  const root = tree[rootID]\n  switch (root?.type) {\n    case \"VARIABLE\":\n      return root.name\n    case \"ABSTRACTION\": {\n      const furthest = furthestJoins[rootID] || (joins[rootID] ? furthestJoins[joins[rootID].jointTo] : \"\")\n      const nextNodes = tree[furthest] ? visibleChildren(tree[furthest], tree) : visibleChildren(root, tree)\n      const names = joinNames(tree, furthest, rootID)\n      return `(λ ${names.join(\" \")}. ${nextNodes.map(nextNode => stringifyTree(tree, nextNode, joins)).join(\" \")})`\n    }\n    case \"APPLICATION\": {\n      return `(${visibleChildren(root, tree)\n        .map(nodeID => stringifyTree(tree, nodeID, joins))\n        .join(\" \")})`\n    }\n    default:\n      return \"\"\n  }\n}\n\nexport const textTreeSelector = createSelector(\n  (state: BoardState) => state.tree.present.nodes,\n  (state: BoardState) => joinsSelector(state),\n  (tree, joins) => (rootID: NodeID) => stringifyTree(tree, rootID, joins)\n)\n","import { textTreeSelector } from \"board/state/selectors/text\"\nimport { useSelector as _useSelector, TypedUseSelectorHook } from \"react-redux\"\nimport { BoardState, coordsSelector, stylesSelector, NodeID, NodeStyle, NodeCoord, joinsSelector } from \".\"\n\nconst useSelector: TypedUseSelectorHook<BoardState> = _useSelector\n\nexport const useBoard = () => useSelector(state => state)\n\nexport const useTreeState = () => useSelector(state => state.tree.present)\n\nexport const useTree = () => useSelector(state => state.tree.present.nodes)\n\nexport const useRoot = () => useSelector(state => state.tree.present.root)\n\nexport const useOriginalRoot = () => useSelector(state => state.tree.present.originalRoot)\n\nexport const useReduction = () => useSelector(state => state.tree.present.reduction)\n\nexport const useReducer = () => useSelector(state => state.tree.present.reducer)\n\nexport const usePrimitives = () => useSelector(state => state.tree.present.primitives)\n\nexport const useNodePrimitive = (nodeID: NodeID) =>\n  useSelector(state => {\n    const tree = state.tree.present\n    const node = tree.nodes[nodeID]\n    return node.primitives.length ? tree.primitives[node.primitives[node.primitives.length - 1]] : undefined\n  })\n\nexport const useConstants = () => useSelector(state => state.tree.present.constants)\n\nexport const useVisualState = () => useSelector(state => state.visual)\n\nexport const useDimensions = () => useSelector(state => state.visual.dimensions)\n\nexport const useTheme = () => useSelector(state => state.visual.theme)\n\nexport const useStyles = () => useSelector(state => stylesSelector(state))\n\nexport const useStyle = (nodeID: NodeID): NodeStyle | undefined => useStyles()[nodeID]\n\nexport const useCoords = () => useSelector(state => coordsSelector(state))\n\nexport const useJoins = () => useSelector(state => joinsSelector(state))\n\nexport const useTextTree = (rootID?: NodeID) =>\n  useSelector(state => textTreeSelector(state)(rootID || state.tree.present.root))\n\nexport const useHighlighted = () => useSelector(state => state.visual.highlighted)\n\nexport const useSelected = () => useSelector(state => state.visual.selected)\n\nexport const useMode = () => useSelector(state => state.visual.animation.mode)\n\nexport const useAnimationSettings = () => useSelector(state => state.visual.animation.settings)\n\nexport const useAnimationEnabled = () => useSelector(state => state.visual.animation.enabled)\n\nexport const useCoord = (nodeID: NodeID): NodeCoord | undefined => useCoords()[nodeID]\n","import {\n  NodeDimension,\n  DimensionOffsets,\n  DimensionOffset,\n  NodeDimensions,\n  TreeState,\n  NodeID,\n  DimensionSettings,\n  TreeNode,\n  NodeJoins,\n  visibleChildren\n} from \"board/state\"\nimport { getPrimitive } from \"board/state/tree\"\nimport _ from \"lodash\"\n\nexport const constructDimensions = (\n  state: TreeState,\n  settings: DimensionSettings,\n  joins: NodeJoins\n): NodeDimensions => {\n  const dimensionOffsets = calculateDimensionOffsets(settings, joins, state)\n  return calculateDimensions(state.root, state, settings, dimensionOffsets)\n}\n\nconst calculateDimensionOffsets = (\n  settings: DimensionSettings,\n  joins: NodeJoins,\n  state: TreeState\n): DimensionOffsets => {\n  const joinOffsets = (): DimensionOffsets => {\n    const maxDistances = _.reduce(\n      joins,\n      (distances: { [nodeID in NodeID]: number }, join) => {\n        const distance = distances[join.jointTo] || 0\n        return { ...distances, [join.jointTo]: Math.max(distance, join.distance) }\n      },\n      {}\n    )\n    return _.reduce(\n      joins,\n      (offsets, join, nodeID) => {\n        if (state.nodes[join.jointTo].primitives.length) return offsets\n        switch (join.type) {\n          case \"ABSTRACTION\":\n            return {\n              ...offsets,\n              [join.jointTo]: { w: -(settings.circleRadius + settings.widthMargin) },\n              ...(maxDistances[join.jointTo] > join.distance\n                ? { [nodeID]: { w: -(settings.circleRadius + settings.widthMargin) } }\n                : {})\n            }\n          default:\n            return {\n              ...offsets,\n              [join.jointTo]: { w: -settings.widthMargin },\n              ...(maxDistances[join.jointTo] > join.distance ? { [nodeID]: { w: -settings.widthMargin } } : {})\n            }\n        }\n      },\n      {}\n    )\n  }\n\n  return joinOffsets()\n}\n\nconst calculateDimensions = (\n  rootID: NodeID,\n  tree: TreeState,\n  settings: DimensionSettings,\n  offsets: DimensionOffsets,\n  dimensions: NodeDimensions = {}\n): NodeDimensions => {\n  const root = tree.nodes[rootID]\n  if (root) {\n    const children = visibleChildren(rootID, tree.nodes)\n    const childDimensions = root.primitives.length\n      ? dimensions\n      : children\n          .map(childID => calculateDimensions(childID, tree, settings, offsets, dimensions))\n          .reduce((prev, cur) => ({ ...prev, ...cur }), {})\n    return {\n      ...childDimensions,\n      [rootID]: addOffset(\n        {\n          h: elementHeight(root, childDimensions, settings, tree),\n          w: elementWidth(root, childDimensions, settings, tree)\n        },\n        offsets[rootID]\n      )\n    }\n  }\n  return dimensions\n}\n\nconst elementWidth = (\n  node: TreeNode,\n  nodeDimensions: NodeDimensions,\n  settings: DimensionSettings,\n  tree: TreeState\n): number => {\n  const sumChildren = () =>\n    visibleChildren(node, tree.nodes)\n      .map(childID => (tree.nodes[childID] ? nodeDimensions[childID].w : -settings.widthMargin))\n      .reduce((sum, w) => sum + w + settings.widthMargin, 0)\n  const prim = getPrimitive(node, tree)\n  if (prim) return settings.circleRadius * 2 + settings.widthMargin * 2 + settings.circleRadius * prim.name.length\n  switch (node.type) {\n    case \"VARIABLE\":\n      return settings.circleRadius * 2\n    case \"ABSTRACTION\":\n      return sumChildren() + settings.circleRadius * 2 + settings.widthMargin\n    case \"APPLICATION\":\n      return sumChildren() + settings.circleRadius + settings.widthMargin\n    default:\n      return 0\n  }\n}\n\nconst elementHeight = (\n  node: TreeNode,\n  nodeDimensions: NodeDimensions,\n  settings: DimensionSettings,\n  tree: TreeState\n): number => {\n  switch (node.type) {\n    case \"VARIABLE\":\n      return settings.circleRadius * 2\n    case \"ABSTRACTION\":\n      return settings.circleRadius * 2 + settings.heightMargin * 2\n    case \"APPLICATION\":\n      return settings.circleRadius * 2 + settings.heightMargin * 2\n    default:\n      return 0\n  }\n}\n\nconst addOffset = <A extends NodeDimension | DimensionOffset>(coord: A, offset?: DimensionOffset): A =>\n  offset\n    ? ({\n        w: (coord.w || 0) + (offset.w || 0),\n        h: (coord.h || 0) + (offset.h || 0)\n      } as A)\n    : coord\n","import primElements from \"board/content/graph/elements/primitive\"\nimport { useAnimationSettings, useStyles, useTree, useDimensions, usePrimitives, useCoords, NodeID } from \"board/state\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport React from \"react\"\nimport absElements from \"./abstraction\"\nimport applElements from \"./application\"\nimport { ExprElementValues, NodeEvents } from \"./types\"\nimport varElements from \"./variable\"\n\nexport * from \"./types\"\n\nexport interface ExprElementsProps {\n  events: NodeEvents\n  orderedKeys: NodeID[]\n  onRest?: (name: string) => void\n  onStart?: (name: string) => void\n}\n\nconst ExprElements = (props: ExprElementsProps) => {\n  const styles = useStyles()\n  const tree = useTree()\n  const dimensions = useDimensions()\n  const primitives = usePrimitives()\n  const coords = useCoords()\n  const values = props.orderedKeys.flatMap(nodeID => {\n    const coord = coords[nodeID]\n    const node = tree[nodeID]\n    if (node.primitives.length) {\n      const primitive = primitives[node.primitives[node.primitives.length - 1]]\n      return primElements(nodeID, props.events, styles[nodeID], coord, dimensions, primitive)\n    }\n    switch (node.type) {\n      case \"VARIABLE\":\n        return varElements(nodeID, props.events, styles[nodeID], coord)\n      case \"ABSTRACTION\":\n        return absElements(nodeID, props.events, styles[nodeID], coord, dimensions)\n      case \"APPLICATION\":\n        return applElements(nodeID, props.events, styles[nodeID], coord, dimensions)\n      default:\n        return []\n    }\n  })\n  return (\n    <motion.g>\n      <AnimatePresence initial={false}>\n        {values.map(value => (\n          <ExprElement key={value.key} name={value.key} {...value} onRest={props.onRest} onStart={props.onStart} />\n        ))}\n      </AnimatePresence>\n    </motion.g>\n  )\n}\n\nexport default ExprElements\n\nexport type ExprElementProps = ExprElementValues & {\n  name: string\n  onRest?: (name: string) => void\n  onStart?: (name: string) => void\n}\n\nconst ExprElement = (props: ExprElementProps) => {\n  if (props.name === \"Test\") console.log(\"here\")\n  const config = useAnimationSettings()\n  const { onRest, onStart } = props\n  const elemProps = {\n    ...props.static,\n    onAnimationStart: () => onStart && onStart(props.name),\n    onAnimationComplete: () => onRest && onRest(props.name),\n    exit: {\n      stroke: \"rgba(0, 0, 0, 0)\",\n      fill: \"rgba(0, 0, 0, 0)\",\n      transition: { type: \"tween\", duration: 0.1 }\n    },\n    transition: config,\n    initial: { ...props.animated, stroke: \"rgba(0, 0, 0, 0)\", fill: \"rgba(0, 0, 0, 0)\" },\n    animate: { ...props.animated }\n  }\n  switch (props.type) {\n    case \"TEXT\":\n      return <motion.text {...elemProps}>{props.text}</motion.text>\n    default:\n      return <motion.path {...elemProps} />\n  }\n}\n","import { PrimStyle, NodeID, NodeStyle, NodeCoord, DimensionSettings, Primitive } from \"board/state\"\n\nimport _ from \"lodash\"\nimport { RawExprProps, NodeEvents, ExprElementValues } from \"./types\"\n\nconst primElements = (\n  nodeID: NodeID,\n  events: NodeEvents,\n  style: NodeStyle,\n  coord: NodeCoord,\n  dimensions: DimensionSettings,\n  primitive: Primitive\n): ExprElementValues[] => {\n  if (!style || !coord || !primitive || style.type !== \"PRIM_STYLE\") return []\n  return rawPrimElements({\n    id: nodeID,\n    events: events,\n    height: coord.h,\n    heightMargin: dimensions.heightMargin,\n    radius: dimensions.circleRadius,\n    style: style,\n    width: coord.w,\n    widthMargin: dimensions.widthMargin,\n    name: primitive.name,\n    x: coord.x,\n    y: coord.y\n  })\n}\n\nexport default primElements\n\ninterface RawPrimProps extends RawExprProps {\n  height: number\n  heightMargin: number\n  radius: number\n  style: PrimStyle\n  width: number\n  widthMargin: number\n  name: string\n}\n\nconst rawPrimElements = (props: RawPrimProps): ExprElementValues[] => {\n  const boxWidth = props.width - props.radius\n  const circleTopPoint = props.y - props.radius\n  const bufferOffset = 1\n  const circleBuffer = props.height / 2 - props.radius - bufferOffset\n  const boxPath = `M${props.x + props.radius},${circleTopPoint}\n        a1,1 0 0,0 0,${props.radius * 2}\n        l${props.heightMargin},${circleBuffer + bufferOffset}\n        l${boxWidth - props.heightMargin * 2},0\n        l${props.heightMargin},${-circleBuffer}\n        l0,${-bufferOffset}\n        a1,1 0 1,1 0,${-props.radius * 2}\n        l0,${-bufferOffset}\n        l${-props.heightMargin},${-circleBuffer}\n        l${props.heightMargin * 2 - boxWidth},0\n        l${-props.heightMargin},${circleBuffer + bufferOffset}\n        l${-1},0`\n\n  const fontSize = props.radius * 1.5\n\n  const staticProps = _.mapValues(props.events, handler => (e: any) => {\n    e.stopPropagation()\n    handler(props.id)\n  })\n\n  return [\n    {\n      type: \"PATH\",\n      key: `${props.id}_prim`,\n      animated: { d: boxPath, fill: props.style.fill, ...props.style.stroke },\n      static: staticProps\n    },\n    {\n      type: \"TEXT\",\n      key: `${props.id}_text`,\n      text: props.name,\n      animated: {\n        x: props.x + props.width / 2,\n        y: props.y,\n        fontSize,\n        ...props.style.text\n      },\n      static: { ...staticProps, textAnchor: \"middle\", dominantBaseline: \"middle\" }\n    }\n  ]\n}\n","import { AbsStyle, NodeID, DimensionSettings, NodeStyle, NodeCoord } from \"board/state\"\nimport _ from \"lodash\"\nimport { RawExprProps, ExprElementValues, NodeEvents } from \"./types\"\n\nconst absElements = (\n  nodeID: NodeID,\n  events: NodeEvents,\n  style: NodeStyle,\n  coord: NodeCoord,\n  dimensions: DimensionSettings\n) => {\n  if (!style || !coord || style.type !== \"ABS_STYLE\") return []\n  return rawAbsElements({\n    id: nodeID,\n    height: coord.h,\n    heightMargin: dimensions.heightMargin,\n    radius: dimensions.circleRadius,\n    style: style,\n    events,\n    width: coord.w,\n    widthMargin: dimensions.widthMargin,\n    x: coord.x,\n    y: coord.y\n  })\n}\n\nexport default absElements\n\ninterface RawAbsProps extends RawExprProps {\n  height: number\n  heightMargin: number\n  radius: number\n  style: AbsStyle\n  width: number\n  widthMargin: number\n}\n\nconst rawAbsElements = (props: RawAbsProps): ExprElementValues[] => {\n  const boxWidth = props.width - props.radius\n  const circleTopPoint = props.y - props.radius\n  const inputX = props.x + boxWidth + props.radius\n  const outPath = `M${props.x + props.radius},${circleTopPoint}\n        a1,1 0 0,0 0,${props.radius * 2}`\n  const inPath = `M${inputX},${circleTopPoint}\n        a1,1 0 0,0 0,${props.radius * 2}\n        l0,${-props.radius * 2}`\n  const bufferOffset = 1\n  const circleBuffer = props.height / 2 - props.radius - bufferOffset\n  const boxPath = `M${props.x + props.radius},${circleTopPoint + props.radius * 2}\n        l0,${bufferOffset}\n        l${props.heightMargin},${circleBuffer}\n        l${boxWidth - props.heightMargin * 2},0\n        l${props.heightMargin},${-circleBuffer}\n        l0,${-bufferOffset}\n        a1,1 0 1,1 0,${-props.radius * 2}\n        l0,${-bufferOffset}\n        l${-props.heightMargin},${-circleBuffer}\n        l${props.heightMargin * 2 - boxWidth},0\n        l${-props.heightMargin},${circleBuffer}\n        l0,${bufferOffset + props.radius * 2}`\n\n  const staticProps = _.mapValues(props.events, handler => (e: any) => {\n    e.stopPropagation()\n    handler(props.id)\n  })\n  return [\n    {\n      type: \"PATH\",\n      key: `${props.id}_output`,\n      animated: {\n        d: outPath,\n        fill: props.style.output.fill,\n        ...props.style.output.stroke\n      },\n      static: staticProps\n    },\n    {\n      type: \"PATH\",\n      key: `${props.id}_input`,\n      animated: {\n        d: inPath,\n        fill: props.style.input.fill,\n        ...props.style.input.stroke\n      },\n      static: staticProps\n    },\n    {\n      type: \"PATH\",\n      key: `${props.id}_box`,\n      animated: { d: boxPath, fill: props.style.fill, ...props.style.stroke },\n      static: { ...staticProps, pointerEvents: \"stroke\" }\n    }\n  ]\n}\n","import { ApplStyle, NodeID, DimensionSettings, NodeStyle, NodeCoord } from \"board/state\"\nimport _ from \"lodash\"\nimport { RawExprProps, ExprElementValues, NodeEvents } from \"./types\"\n\nconst applElements = (\n  nodeID: NodeID,\n  events: NodeEvents,\n  style: NodeStyle,\n  coord: NodeCoord,\n  dimensions: DimensionSettings\n) => {\n  if (!style || !coord || style.type !== \"APPL_STYLE\") return []\n  return rawApplElements({\n    id: nodeID,\n    height: coord.h,\n    heightMargin: dimensions.heightMargin,\n    radius: dimensions.circleRadius,\n    style: style,\n    events,\n    width: coord.w,\n    x: coord.x,\n    y: coord.y\n  })\n}\n\nexport default applElements\n\ninterface RawApplProps extends RawExprProps {\n  radius: number\n  heightMargin: number\n  width: number\n  height: number\n  style: ApplStyle\n}\n\nconst rawApplElements = (props: RawApplProps): ExprElementValues[] => {\n  const boxWidth = props.width - props.radius\n  const bufferOffset = 1\n  const circleBuffer = props.height / 2 - props.radius - bufferOffset\n  const outPath = `M${props.x + props.radius},${props.y - props.radius}\n        a1,1 0 0,0 0,${props.radius * 2}`\n  const boxPath = `M${props.x + props.radius},${props.y + props.radius}\n        l0,${bufferOffset}\n        l${props.heightMargin},${circleBuffer}\n        l${boxWidth - props.heightMargin * 2},0\n        l${props.heightMargin},${-circleBuffer}\n        l0,${-bufferOffset}\n        l0,${-props.radius * 2}\n        l0,${-bufferOffset}\n        l${-props.heightMargin},${-circleBuffer}\n        l${props.heightMargin * 2 - boxWidth},0\n        l${-props.heightMargin},${circleBuffer}\n        l0,${bufferOffset + props.radius * 2}`\n\n  const staticProps = _.mapValues(props.events, handler => (e: any) => {\n    e.stopPropagation()\n    handler(props.id)\n  })\n  return [\n    {\n      type: \"PATH\",\n      key: `${props.id}_output`,\n      animated: {\n        d: outPath,\n        fill: props.style.output.fill,\n        ...props.style.output.stroke\n      },\n      static: staticProps\n    },\n    {\n      type: \"PATH\",\n      key: `${props.id}_box`,\n      animated: {\n        d: boxPath,\n        fill: props.style.fill,\n        ...props.style.stroke\n      },\n      static: { ...staticProps, pointerEvents: \"stroke\" }\n    }\n  ]\n}\n","import { VarStyle, NodeID, NodeStyle, NodeCoord } from \"board/state\"\nimport _ from \"lodash\"\nimport { RawExprProps, ExprElementValues, NodeEvents } from \"./types\"\n\nconst varElements = (nodeID: NodeID, events: NodeEvents, style: NodeStyle, coord: NodeCoord): ExprElementValues[] => {\n  if (!style || !coord || style.type !== \"VAR_STYLE\") return []\n  return rawVarElements({\n    id: nodeID,\n    radius: coord.w / 2,\n    style: style,\n    events: events,\n    x: coord.x,\n    y: coord.y\n  })\n}\n\nexport default varElements\n\ninterface RawVarProps extends RawExprProps {\n  radius: number\n  style: VarStyle\n}\n\nconst rawVarElements = (props: RawVarProps): ExprElementValues[] => {\n  const path = `M${props.x},${props.y}\n      a${props.radius},${props.radius} 0 1,0 ${props.radius * 2},0\n      a${props.radius},${props.radius} 0 1,0 -${props.radius * 2},0`\n\n  return [\n    {\n      type: \"PATH\",\n      key: `${props.id}_var`,\n      animated: {\n        d: path,\n        fill: props.style.fill,\n        ...props.style.stroke\n      },\n      static: _.mapValues(props.events, handler => (e: any) => {\n        e.stopPropagation()\n        handler(props.id)\n      })\n    }\n  ]\n}\n"],"sourceRoot":""}